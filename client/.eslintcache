[{"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\AddStorePage.js":"1","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_actions\\store_actions.js":"2","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\StorePage.js":"3","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\HomePage.js":"4","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\SearchPage.js":"5","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\MyPage.js":"6","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\ResiCheckPage.js":"7","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_actions\\types.js":"8","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_reducers\\reserve_reducer.js":"9","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_actions\\reserve_actions.js":"10","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_reducers\\index.js":"11","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\RegisterPage.js":"12","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\Navigator.js":"13","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\index.js":"14","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\CancelPage.js":"15","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\lib\\server.js":"16","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\lib\\client.js":"17","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\StarRate.js":"18","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\MyResvPage.js":"19","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\PreResvPage.js":"20","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\auth\\AuthTemplate.js":"21","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\lib\\dateFormat.js":"22","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\LoginPage.js":"23","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\radioButton.js":"24","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\lib\\styles\\palette.js":"25","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\App.js":"26","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\TestReviewPage.js":"27","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\Button.js":"28","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_actions\\review_action.js":"29","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\ModStorePage.js":"30","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_actions\\user_actions.js":"31","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_reducers\\store_reducer.js":"32","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\OwnerPage.js":"33","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\auth\\AuthForm.js":"34","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\CustomRadioButton.js":"35","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\ReviewPage.js":"36","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\modal\\Modal.js":"37","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\auth\\AuthStoreForm.js":"38","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_reducers\\user_reducer.js":"39","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\ImgDiv.js":"40","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\reportWebVitals.js":"41","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\ProfilePage.js":"42","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\MenuBlock.js":"43","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\Input.js":"44","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_reducers\\review_reducer.js":"45","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\ReservePage.js":"46","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\NotFoundPage.js":"47"},{"size":10927,"mtime":1611642112088,"results":"48","hashOfConfig":"49"},{"size":1584,"mtime":1611625908228,"results":"50","hashOfConfig":"49"},{"size":6669,"mtime":1611624551959,"results":"51","hashOfConfig":"49"},{"size":1891,"mtime":1611581839387,"results":"52","hashOfConfig":"49"},{"size":3168,"mtime":1611581957846,"results":"53","hashOfConfig":"49"},{"size":2336,"mtime":1611582645067,"results":"54","hashOfConfig":"49"},{"size":2335,"mtime":1611588267693,"results":"55","hashOfConfig":"49"},{"size":953,"mtime":1611624873821,"results":"56","hashOfConfig":"49"},{"size":1427,"mtime":1611586766014,"results":"57","hashOfConfig":"49"},{"size":1691,"mtime":1611587611372,"results":"58","hashOfConfig":"49"},{"size":315,"mtime":1611309074707,"results":"59","hashOfConfig":"49"},{"size":304,"mtime":1611407722570,"results":"60","hashOfConfig":"49"},{"size":1160,"mtime":1611558217141,"results":"61","hashOfConfig":"49"},{"size":1092,"mtime":1611556901826,"results":"62","hashOfConfig":"49"},{"size":286,"mtime":1611231549984,"results":"63","hashOfConfig":"49"},{"size":68,"mtime":1611641953419,"results":"64","hashOfConfig":"49"},{"size":92,"mtime":1611410150208,"results":"65","hashOfConfig":"49"},{"size":2221,"mtime":1611589631480,"results":"66","hashOfConfig":"49"},{"size":1365,"mtime":1611603183216,"results":"67","hashOfConfig":"49"},{"size":1307,"mtime":1611603188415,"results":"68","hashOfConfig":"49"},{"size":1419,"mtime":1611479789642,"results":"69","hashOfConfig":"49"},{"size":2346,"mtime":1611404348619,"results":"70","hashOfConfig":"49"},{"size":296,"mtime":1611231549984,"results":"71","hashOfConfig":"49"},{"size":549,"mtime":1611404579921,"results":"72","hashOfConfig":"49"},{"size":640,"mtime":1611313574602,"results":"73","hashOfConfig":"49"},{"size":2414,"mtime":1611600372065,"results":"74","hashOfConfig":"49"},{"size":7427,"mtime":1611603439979,"results":"75","hashOfConfig":"49"},{"size":1401,"mtime":1611301112525,"results":"76","hashOfConfig":"49"},{"size":722,"mtime":1611602492370,"results":"77","hashOfConfig":"49"},{"size":408,"mtime":1611392304891,"results":"78","hashOfConfig":"49"},{"size":2217,"mtime":1611546204398,"results":"79","hashOfConfig":"49"},{"size":1311,"mtime":1611624866878,"results":"80","hashOfConfig":"49"},{"size":1245,"mtime":1611626024104,"results":"81","hashOfConfig":"49"},{"size":6197,"mtime":1611645989324,"results":"82","hashOfConfig":"49"},{"size":752,"mtime":1611557376158,"results":"83","hashOfConfig":"49"},{"size":2137,"mtime":1611585347560,"results":"84","hashOfConfig":"49"},{"size":1787,"mtime":1611231549976,"results":"85","hashOfConfig":"49"},{"size":4526,"mtime":1611231549973,"results":"86","hashOfConfig":"49"},{"size":1398,"mtime":1611545753536,"results":"87","hashOfConfig":"49"},{"size":488,"mtime":1611460408169,"results":"88","hashOfConfig":"49"},{"size":375,"mtime":1611231549989,"results":"89","hashOfConfig":"49"},{"size":4828,"mtime":1611555928674,"results":"90","hashOfConfig":"49"},{"size":653,"mtime":1611460408171,"results":"91","hashOfConfig":"49"},{"size":771,"mtime":1611460408171,"results":"92","hashOfConfig":"49"},{"size":627,"mtime":1611392223055,"results":"93","hashOfConfig":"49"},{"size":3876,"mtime":1611648826869,"results":"94","hashOfConfig":"49"},{"size":310,"mtime":1611480786002,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},"1wkn1h1",{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"117"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"107"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"107"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"131"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"117"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"99"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\AddStorePage.js",["223","224","225","226","227","228","229","230","231","232"],"import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport Input from \"../components/common/Input\";\r\nimport Button from \"../components/common/Button\";\r\nimport MenuBlock from \"../components/common/MenuBlock\";\r\nimport styled from 'styled-components'\r\nimport ImgDiv from '../components/common/ImgDiv'\r\nimport * as storeAction from '../_actions/store_actions'\r\n//휴일, 휴식시간 select박스 스타일, 이거는 따로 styled-component만들면 계속 옵션부분이 적용이 안되고 있어서 여기에 배치\r\nconst Select = styled.select`\r\n  width: 33%;\r\n  height: 35px;\r\n  background: white;\r\n  color: gray;\r\n  padding-left: 5px;\r\n  font-size: 14px;\r\n  border: 0.5px solid gray;\r\n  border-radius: 4px;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n\r\n  option {\r\n    color: black;\r\n    background: white;\r\n    display: flex;\r\n    white-space: pre;\r\n    min-height: 20px;\r\n    padding: 0px 2px 1px;\r\n  }\r\n`;\r\n\r\nconst InputButton = styled.input`\r\n  border: 0;\r\n  font-size: 0.7rem;\r\n  text-align: center;\r\n  color: #000;\r\n  border-radius: 1.5rem;\r\n  text-shadow: 1px 1px 1px 1px rgba(255, 255, 255, .1);\r\n  background-color: rgba(3, 223, 252, 0)\r\n  background-image: linear-gradient(to top left,\r\n    rgba(0, 0, 0, .2),\r\n    rgba(0, 0, 0, .2) 30%,\r\n    rgba(0, 0, 0, 0));\r\n  box-shadow: inset 2px 2px 3px rgba(255, 255, 255, .6),\r\n  inset -2px -2px 3px rgba(0, 0, 0, .6);\r\n`\r\n\r\nconst InputFile = styled.input`\r\n    border: 0;\r\n    display: inline-block;\r\n    font-size: 0.7rem;\r\n    text-align: center;\r\n    background-color: rgba(3, 223, 252, 0);\r\n    padding-bottom: 1rem;\r\n`\r\n\r\n\r\n\r\nconst AddStorePage = ({history}) => {\r\n  \r\n  const [maxItem, setMaxItem] = useState(1)\r\n  const [selectCategories, setSelectCategories] = useState(\"한식\")\r\n  const [selectIndex, setSelectIndex] = useState(0);\r\n\r\n  const [storeName, setStoreName] = useState('')\r\n  const [storeAddress, setStoreAddress] = useState('')\r\n  const [storeTel, setStoreTel] = useState('')\r\n  const [storeDesc, setStoreDesc] = useState('')\r\n  const [storePrepay, setStorePrepay] = useState('')\r\n  const [storeBreakTime1, setStoreBreakTime1] = useState(1400)\r\n  const [storeBreakTime2, setStoreBreakTime2] = useState(1500)\r\n  const [storeHoliday, setStoreHoliday] = useState(\"월\")\r\n  const [storeBussnissNumber, setStoreBussnissNumber] = useState('')\r\n  const [storeImg, setStoreImg] = useState(null)\r\n  const [menuName, setMenuName] = useState(Array(20))\r\n  const [menuPrice, setMenuPrice] = useState(Array(20))\r\n  const [menuImg, setMenuImg] = useState(Array(20))\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const addItemLength = function (e) {\r\n    if(maxItem === 20){\r\n      alert(`더 이상 추가할 수 없습니다 \\n현재 메뉴의 개수 ${maxItem}`);\r\n      return;\r\n    }\r\n    setMaxItem(maxItem+1)\r\n  }\r\n\r\n  const removeItem = function (e) {\r\n    if(maxItem === 1){\r\n      alert(\"더 이상 삭제할 수 없습니다\")\r\n      return;\r\n    }\r\n    setMaxItem(maxItem-1)\r\n  }\r\n\r\n  function onSelectChange(e) {\r\n    const selection = parseInt(e.currentTarget.value)\r\n    const categoriesList = [\"한식\", \"중식\", \"일식\", \"양식\"]\r\n    setSelectIndex(selection)\r\n    setSelectCategories(categoriesList[selection])\r\n  }\r\n\r\n  function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"name\", e.target.sName.value);\r\n    formData.append(\"address\", e.target.sAddress.value);\r\n    formData.append(\"tel\", e.target.sTel.value);\r\n    formData.append(\"description\", e.target.sDesc.value);\r\n    formData.append(\"prepay\", e.target.sPrepay.value);\r\n    formData.append(\"breaktime\", e.target.break1.value);\r\n    formData.append(\"holyday\", e.target.holiday.value);\r\n    formData.append(\"busino\", e.target.busino.value);\r\n    formData.append(\"categories\", selectCategories);\r\n    formData.append(\"store_img\", e.target.store_img.files[0])\r\n\r\n\r\n    if(maxItem > 1){\r\n      [...Array(maxItem)].map( (n, index) => {\r\n        const file = e.target.menu_img[index].files[0]\r\n        formData.append('menu_name', e.target.menu_name[index].value)\r\n        formData.append('menu_price', e.target.menu_price[index].value)\r\n        formData.append('menu_img_name', file ? file.name : '')\r\n        formData.append('menu_img', file)\r\n      })\r\n    }\r\n    else {\r\n      formData.append('menu_name', e.target.menu_name.value)\r\n      formData.append('menu_price', e.target.menu_price.value)\r\n      formData.append('menu_img', e.target.menu_img.files[0])\r\n    }\r\n    // formData.append(\"store_img\", storeImg, storeImg)\r\n\r\n    dispatch(storeAction.storeAdd(formData)).then(data => history.push(`/StorePage/${data}`));\r\n  }\r\n\r\n  function onChangeInputData(e) {\r\n    switch(e.currentTarget.name){\r\n      case \"break1\":\r\n        setStoreBreakTime1(parseInt(e.currentTarget.value));\r\n        if(e.currentTarget.value >= storeBreakTime2){\r\n          alert(\"휴식 시작시간이 종료시간보다 클 수 없습니다.\");\r\n          setStoreBreakTime1(1400);\r\n    \r\n          return;\r\n        }\r\n        break;\r\n      case \"break2\":\r\n        setStoreBreakTime2(parseInt(e.currentTarget.value));\r\n        break;\r\n      case \"holiday\":\r\n        setStoreHoliday(e.currentTarget.value);\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  function onChangeTextData(e) {\r\n    const {name, value} = e.currentTarget\r\n    switch(name){\r\n      case \"busino\":\r\n        setStoreBussnissNumber(value)\r\n        break;\r\n      case \"sName\":\r\n        setStoreName(value);\r\n        break;\r\n      case \"sAddress\":\r\n        setStoreAddress(value);\r\n        break;\r\n      case \"sTel\":\r\n        setStoreTel(value);\r\n        break;\r\n      case \"sDesc\":\r\n        setStoreDesc(value);\r\n        break;\r\n      case \"sPrepay\":\r\n        setStorePrepay(value);\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  const onChangeMenuData = (e) => {\r\n    const {name, value} = e.currentTarget\r\n  }\r\n\r\n  const onChangeFileData = (e) => {\r\n    setStoreImg(e.target.files);\r\n  }\r\n\r\n  \r\n  return (\r\n    <AuthTemplate relative>\r\n      <h3>가게추가</h3>\r\n    <form action=\"post\" onSubmit={onSubmitHandler} encType=\"multipart/form-data\">\r\n      <Input fullWidth\r\n       placeholder=\"이름\"\r\n       name=\"sName\"\r\n       onChange={onChangeTextData}\r\n       value={storeName}\r\n       />\r\n      <Input fullWidth\r\n       placeholder=\"주소\"\r\n       name=\"sAddress\"\r\n       onChange={onChangeTextData}\r\n       value={storeAddress}\r\n       />\r\n      <Input fullWidth\r\n       placeholder=\"전화번호 ['-'는 제외하고 입력]\"\r\n       pattern=\"01[016789]\\d{7,8}\"\r\n       title=\"형식 01012345678\"\r\n       name=\"sTel\"\r\n       onChange={onChangeTextData}\r\n       value={storeTel}\r\n       />\r\n      <Input fullWidth\r\n       placeholder=\"가게설명\"\r\n       name=\"sDesc\"\r\n       onChange={onChangeTextData}\r\n       value={storeDesc}\r\n       />\r\n      <Input fullWidth\r\n       placeholder=\"선수금\"\r\n       name=\"sPrepay\"\r\n       onChange={onChangeTextData}\r\n       value={storePrepay}\r\n       />\r\n      <MenuBlock>\r\n        <p>휴식시간</p>\r\n      <Select name=\"break1\" value={storeBreakTime1} onChange={onChangeInputData}>\r\n        <option value={1400}>14:00</option>\r\n        <option value={1430}>14:30</option>\r\n        <option value={1500}>15:00</option>\r\n        <option value={1530}>15:30</option>\r\n        <option value={1600}>16:00</option>\r\n        <option value={1630}>16:30</option>\r\n      </Select>~\r\n      <Select name=\"break2\" value={storeBreakTime2} onChange={onChangeInputData}>\r\n        <option value={1500}>15:00</option>\r\n        <option value={1530}>15:30</option>\r\n        <option value={1600}>16:00</option>\r\n        <option value={1630}>16:30</option>\r\n        <option value={1700}>17:00</option>\r\n        <option value={1730}>17:30</option>\r\n      </Select>\r\n      </MenuBlock>\r\n      <MenuBlock>\r\n        <p>휴일</p>\r\n        <Select name=\"holiday\" value={storeHoliday} onChange={onChangeInputData}>\r\n        <option value={\"없음\"} defaultChecked>\r\n          없음\r\n        </option>\r\n        <option value={\"월\"}>월요일</option>\r\n        <option value={\"화\"}>화요일</option>\r\n        <option value={\"수\"}>수요일</option>\r\n        <option value={\"목\"}>목요일</option>\r\n        <option value={\"금\"}>금요일</option>\r\n        <option value={\"토\"}>토요일</option>\r\n        <option value={\"일\"}>일요일</option>\r\n      </Select>\r\n      </MenuBlock>\r\n      <Input fullWidth name=\"busino\" placeholder=\"사업자등록번호\"\r\n       onChange={onChangeTextData} value={storeBussnissNumber}\r\n      ></Input>\r\n      <span>가게 분류</span>\r\n      <div>\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={0} \r\n              checked={selectIndex === 0}\r\n              onChange={onSelectChange}/> 한식\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={1}\r\n              checked={selectIndex === 1}\r\n              onChange={onSelectChange}/> 중식\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={2} \r\n              checked={selectIndex === 2}\r\n              onChange={onSelectChange}/> 일식\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={3} \r\n              checked={selectIndex === 3}\r\n              onChange={onSelectChange}/> 양식\r\n      </div>\r\n      <br/>\r\n      \r\n      <InputFile \r\n        type=\"file\"\r\n        name=\"store_img\"\r\n        onChange={onChangeFileData}\r\n       accept=\".gif, .jpg, .png\"/>\r\n      {maxItem >= 1 && [...Array(maxItem)].map((n, index) => (\r\n        <MenuBlock high>\r\n          <Input \r\n          fullWidth\r\n           type=\"text\"\r\n           name={`menu_name`}\r\n           onChange={onChangeMenuData}\r\n           value={menuName[index]}\r\n            placeholder=\"메뉴명\"/>\r\n          <Input \r\n          fullWidth \r\n          type=\"text\" \r\n          name={`menu_price`}\r\n          value={menuPrice[index]}\r\n          onChange={onChangeMenuData}\r\n          placeholder=\"가격\"/>\r\n          <InputFile\r\n           type=\"file\"\r\n           name=\"menu_img\"\r\n           onChange={onChangeFileData}\r\n            accept=\".gif, .jpg, .png\"\r\n          />\r\n          <InputButton type=\"button\" name={`button${index}`} right onClick={removeItem} value=\"메뉴삭제\"/>\r\n        </MenuBlock>\r\n      ))}\r\n\r\n      <InputButton type=\"button\" \r\n          round style={{ float: \"right\" }}\r\n          onClick={addItemLength} \r\n          value=\"메뉴추가\"/>\r\n        \r\n      <br/><br/><br/>\r\n\r\n      \r\n      <Button type=\"submit\" fullWidth cyan>\r\n        가게 추가\r\n      </Button>\r\n    </form>\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default AddStorePage;\r\n\r\n//pages/AddStorePage.js [가게에 들어갈내용 + 메뉴넣는기능 만들기 (+를 누르면 추가적으로 메뉴작성할 수 있고 -를 누르면 목록 삭제)]\r\n",["233","234"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_actions\\store_actions.js",["235"],"import client from '../lib/client'\r\nimport {\r\n    STORE_ADD,\r\n    STORE_INFO,\r\n    STORE_SEARCH,\r\n    STORE_LIMIT_SEARCH,\r\n    STORE_UPDATE,\r\n    STORE_ADMIN_LIST,\r\n} from './types.js'\r\nimport * as domain from '../lib/server'\r\n\r\n//홈에 가게조회\r\nexport function mainPageStoreList(dataToSubmit){\r\n    const req = client.get(`${domain.default}api/store/home`)\r\n        .then(res => res)\r\n\r\n    return {\r\n        type: STORE_LIMIT_SEARCH,\r\n        payload: req\r\n    }\r\n}\r\n\r\nexport function storeSearch(keyword) {\r\n    const req = client.get(`${domain.default}api/store/search?main=${keyword.main}&detail=${keyword.detail}`)\r\n                .then(res => res)\r\n\r\n    return {\r\n        type: STORE_SEARCH,\r\n        payload: req\r\n    }\r\n}\r\n\r\nexport function storeAdd(data) {\r\n    //const req = client.post(`${domain.default}api/store/filetest`, data).then(res => res)\r\n    const req = client({\r\n        method: \"post\",\r\n        url: `${domain.default}api/store/`,\r\n        data: data,\r\n        headers: { \"Content-type\": \"multipart/form-data\" }\r\n    })\r\n\r\n    return {\r\n        type: STORE_ADD,\r\n        payload: req\r\n    }\r\n}\r\n\r\n//가게 내용 조회\r\nexport function storeInfo(storeid) {\r\n    const req = client.get(`${domain.default}api/store/${storeid}`).then(res => res)\r\n\r\n    return {\r\n        type: STORE_INFO,\r\n        payload: req,\r\n    }\r\n}\r\n\r\nexport function adminManagementStoreList(){\r\n    const req = client.get(`${domain.default}api/ad-store/`).then(res => {\r\n        return res;\r\n    })\r\n\r\n    return{\r\n        type: STORE_ADMIN_LIST,\r\n        payload: req\r\n    }\r\n}",["236","237"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\StorePage.js",["238","239"],"import React, { useState, useEffect } from \"react\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled, { css } from \"styled-components\";\r\nimport palette from \"../lib/styles/palette\";\r\nimport AuthForm from \"../components/auth/AuthForm\";\r\nimport Button from \"../components/common/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from '../components/modal/Modal'\r\nimport * as storeAction from '../_actions/store_actions'\r\nimport * as reviewAction from '../_actions/review_action'\r\nimport * as format from '../lib/dateFormat'\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport RadioButton from '../components/common/radioButton'\r\nimport * as domain from '../lib/server'\r\nimport { Helmet } from 'react-helmet-async'\r\n\r\n\r\n\r\nconst ImgDiv = styled.img`\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 0.25rem;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border: 1px solid ${palette.gray[5]};\r\n  width: 50%;\r\n  margin-right: 0.5rem;\r\n  &:{\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 100%;\r\n  height: 10vh;\r\n  object-fit: cover;\r\n  boder: 1px solid #000;\r\n`\r\n\r\nconst MenuBlock = styled.div`\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 0.25rem;\r\n  font-size: ${({ font_size }) => font_size}rem;\r\n  line-height: 1.5;\r\n  border: 1px solid ${palette.gray[5]};\r\n  width: 100%;\r\n  margin-right: 1rem;\r\n  ${(props) =>\r\n    props.bold &&\r\n    css`\r\n      font-weight: bold;\r\n    `}\r\n  ${(props) =>\r\n    props.right &&\r\n    css`\r\n      text-align: right;\r\n    `}\r\n`;\r\n\r\n\r\n\r\n\r\nconst StorePage = (props) => {\r\n\r\n  const { storeid } = props.match.params;\r\n\r\n  const dispatch = useDispatch();\r\n  const { findStoreInfo } = useSelector(state => state.store);\r\n  const { indexReview } = useSelector(state => state.review);\r\n\r\n  const [resDateIndex, setResDateIndex] = useState(0)\r\n  const [radioIndex, setRadioIndex] = useState(0)\r\n\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const openModal = () => {\r\n    setModalVisible(true)\r\n  }\r\n  const closeModal = () => {\r\n    setModalVisible(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(storeAction.storeInfo(storeid))\r\n    dispatch(reviewAction.reviewIndexer(storeid))\r\n  }, [dispatch, storeid])\r\n\r\n  const carouselOnChangeHandler = (curItem, curPageIndex) => {\r\n    setResDateIndex(curPageIndex);\r\n  }\r\n\r\n  const radioCheckHandler = (e) => {\r\n    setRadioIndex(e.target.defaultValue)\r\n  }\r\n\r\n  return (<>\r\n    {findStoreInfo ?\r\n      <AuthTemplate relative>\r\n        <Helmet>\r\n          <title>{findStoreInfo.store.name}</title>\r\n        </Helmet>\r\n        <h3 align=\"center\">{findStoreInfo.store.name}</h3>\r\n        <h4 align=\"center\">{findStoreInfo.store.address}</h4>\r\n        <div align=\"center\">\r\n          <ImgDiv src={domain.default + findStoreInfo.store.store_img}\r\n            alt=\"\" />\r\n        </div>\r\n        <br />\r\n        <div align=\"right\"> 별점 평균 :\r\n        {indexReview && indexReview.star.length > 0 &&\r\n            <span> {indexReview.star[indexReview.star.length - 1].average}</span>}\r\n        </div>\r\n        <div align=\"right\">\r\n          {indexReview &&\r\n            indexReview.star.length > 0 &&\r\n            [...Array(5)].map((n, index) =>\r\n              indexReview.star[indexReview.star.length - 1].average > index ?\r\n                <>★</> : <>☆</>\r\n            )\r\n          }\r\n        </div>\r\n        <br />\r\n\r\n        <h4 align=\"center\"> 메뉴 </h4>\r\n        <Carousel itemToShow={1}>\r\n          {findStoreInfo.menu &&\r\n            findStoreInfo.menu.length > 0 ?\r\n            findStoreInfo.menu.map(data =>\r\n              <MenuBlock right bold>\r\n                <div>\r\n                  <StyledImg src={`${domain.default}${data.menu_img}`} width='64px' alt='' />\r\n                  <br /><p>{data.name}</p><p>{data.price}</p>\r\n                </div>\r\n              </MenuBlock>\r\n            ) : <MenuBlock center bold>준비중입니다.</MenuBlock>\r\n          }\r\n        </Carousel>\r\n\r\n        <h4 align=\"center\"> 리뷰 </h4>\r\n        {indexReview &&\r\n          indexReview.review && indexReview.review.length > 0 ?\r\n          indexReview.review.map(review =>\r\n            <MenuBlock key={review.reviewid}>\r\n              <h3>{review.title}</h3>\r\n              <ImgDiv src={`${domain.default}${review.review_img}`} />\r\n              <h5>작성자: {review.writer}</h5>\r\n              <hr />\r\n              <p>{review.content}</p>\r\n              <p>별점 {review.score} {[...Array(5)].map((n, index) =>\r\n                parseInt(review.score) > index ? <>★</> : <>☆</>\r\n              )}</p>\r\n            </MenuBlock>\r\n          ) : <MenuBlock font_size=\"0.8\"> 리뷰가 없습니다.😂<br /> 해당 가게의 첫번째 리뷰어가 되어볼까요?</MenuBlock>\r\n        }\r\n        <Button cyan fullWidth style={{ marginTop: \"1rem\" }} onClick={openModal}>\r\n          예약하기\r\n      </Button>\r\n        {\r\n          modalVisible && (\r\n            <Modal\r\n              visible={modalVisible}\r\n              closable={true}\r\n              maskClosable={true}\r\n              onClose={closeModal}\r\n            >\r\n              <div>\r\n                <Carousel itemToShow={1} onChange={carouselOnChangeHandler}>\r\n                  {[...Array(7)].map((n, index) =>\r\n                    <p>{new Date(Date.now() + (index * 86400 * 1000)).format('MM월 dd일')}</p>\r\n                  )}\r\n                </Carousel>\r\n              </div>\r\n              <MenuBlock>\r\n                <RadioButton>\r\n                  {[...Array(5)].map((n, index) =>\r\n                    <div key={index}>\r\n                      {resDateIndex === 0 &&\r\n                        parseInt(new Date().format('HH')) + 1 >= (index * 2) + 12 ?\r\n                        <> <input type=\"radio\" disabled onChange={radioCheckHandler} id={index} name=\"timezone\" value={index} />\r\n                          <label htmlFor={index}>해당시간대는 선택하실 수 없습니다</label> </> :\r\n                        <> <input type=\"radio\" onChange={radioCheckHandler} id={index} name=\"timezone\" value={index} />\r\n                          <label htmlFor={index}>{(index * 2) + 12}:00 ~ {(index * 2) + 14}:00</label> </>\r\n\r\n                      }\r\n\r\n                    </div>\r\n                  )}\r\n                </RadioButton>\r\n              </MenuBlock>\r\n              <Link to={`/ReservePage/${storeid}/${(radioIndex * 2) + 12}/${resDateIndex}`}>\r\n              <Button fullWidth>예약하기</Button>\r\n              </Link>\r\n            </Modal>\r\n          )}\r\n      </AuthTemplate> :\r\n      ''\r\n    }\r\n  </>\r\n  );\r\n};\r\n\r\nexport default StorePage;\r\n",["240","241"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\HomePage.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\SearchPage.js",["242"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Button from \"../components/common/Button\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomRadioButton } from \"../components/common/CustomRadioButton\"\r\nimport Input from '../components/common/Input'\r\nimport MenuBlock from '../components/common/MenuBlock'\r\nimport * as storeAction from '../_actions/store_actions'\r\nimport * as domain from '../lib/server'\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledImg = styled.img`\r\n  width: 100%;\r\n  object-fit: cover;\r\n  boder: 1px solid #000;\r\n`\r\n\r\nconst SearchPage = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectCategories, setSelectCategories] = useState(\"한식\")\r\n  const [selectIndex, setSelectIndex] = useState(0);\r\n  const dispatch = useDispatch()\r\n\r\n  const { arrayStoreList } = useSelector(state => state.store)\r\n\r\n  function onSearchChange(e) {\r\n    setSearch(e.currentTarget.value);\r\n  }\r\n\r\n  function onSelectChange(e) {\r\n    const selection = parseInt(e.currentTarget.value)\r\n    const categoriesList = [\"한식\", \"중식\", \"일식\", \"양식\"]\r\n    setSelectIndex(selection)\r\n    setSelectCategories(categoriesList[selection])\r\n  }\r\n\r\n  function getStoreList() {\r\n    const keyword = {\r\n      main: search, \r\n      detail: selectCategories\r\n    }\r\n    dispatch(storeAction.storeSearch(keyword));\r\n  }\r\n\r\n  return (\r\n    <AuthTemplate relative={true}>\r\n      <Input placeholder=\"검색\" \r\n      type=\"text\"\r\n      value={search}\r\n      onChange={onSearchChange}\r\n      />\r\n      <Button cyan style={{ marginTop: \"1rem\" }}  onClick={getStoreList}>\r\n        검색\r\n      </Button>\r\n      <br />\r\n\r\n      <div>\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={0} \r\n              checked={selectIndex === 0}\r\n              onChange={onSelectChange}/> 한식\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={1}\r\n              checked={selectIndex === 1}\r\n              onChange={onSelectChange}/> 중식\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={2} \r\n              checked={selectIndex === 2}\r\n              onChange={onSelectChange}/> 일식\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={3} \r\n              checked={selectIndex === 3}\r\n              onChange={onSelectChange}/> 양식\r\n      </div>\r\n\r\n      {arrayStoreList &&\r\n          arrayStoreList.length > 0 &&\r\n        <MenuBlock bold>\r\n          <table>\r\n          {\r\n            arrayStoreList.map(data => (\r\n              <tr>\r\n                <td>\r\n                <Link to={`/StorePage/${data.storeid}`}>\r\n                <StyledImg src={`${domain.default}${data.store_img}`} alt={`${data.name}`} key={data.storeid}/><br/>\r\n              </Link>\r\n                </td>\r\n                <td width=\"50%\">{data.name}</td>\r\n              </tr>\r\n            ))\r\n          }\r\n          </table>\r\n        </MenuBlock>\r\n      }\r\n      \r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n",["243","244"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\MyPage.js",["245","246"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Button from '../components/common/Button';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport AuthForm from '../components/auth/AuthForm';\r\nimport { auth, logout } from '../_actions/user_actions';\r\n\r\nconst MyPage = (props) => {\r\n    const { account } = useSelector(state => {\r\n        return state.user;\r\n    })\r\n    const dispatch = useDispatch()\r\n\r\n    /* 해당 페이지가 처음 실행되었을때 실행되는 함수 */\r\n    useEffect(() => {\r\n        dispatch(auth());\r\n    }, [dispatch])\r\n\r\n    const loggedout = () => {\r\n        dispatch(logout());\r\n    }\r\n\r\n\r\n    return (\r\n        <AuthTemplate>\r\n            {\r\n                !account ?\r\n                    <><AuthForm type=\"login\" /></> :\r\n                    <>\r\n                        <Link to=\"/MyResvPage\">\r\n                            <Button cyan style={{ marginTop: '1rem' }}>\r\n                                나의 예약 현황\r\n                        </Button>\r\n                        </Link><br />\r\n\r\n                        <Link to=\"/PreResvPage\">\r\n                            <Button cyan style={{ marginTop: '1rem' }}>\r\n                                이전 예약 목록\r\n                        </Button>\r\n                        </Link><br />\r\n\r\n                        {\r\n                            account.admin &&\r\n                            <>\r\n                                <Link to=\"/owner/reserve\">\r\n                                    <Button cyan style={{ marginTop: '1rem' }}>\r\n                                        내 가게 관리\r\n                                    </Button>\r\n                                </Link><br />\r\n                            </>\r\n                        }\r\n\r\n                        <Link to=\"/ProfilePage\">\r\n                            <Button cyan style={{ marginTop: '1rem' }}>\r\n                                프로필 수정\r\n                        </Button>\r\n                        </Link><br />\r\n                        <Button cyan style={{ marginTop: '1rem' }} onClick={loggedout}>로그아웃</Button>\r\n                    </>\r\n            }\r\n        </AuthTemplate>\r\n    )\r\n}\r\n\r\nexport default MyPage;",["247","248"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\ResiCheckPage.js",["249"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport MenuBlock from '../components/common/MenuBlock';\r\nimport Button from '../components/common/Button'\r\nimport Modal from \"../components/modal/Modal\";\r\nimport * as storeAction from '../_actions/store_actions'\r\nimport * as resAction from '../_actions/reserve_actions'\r\n\r\n\r\nconst ResiCheckPage = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const { viewAdminReserveData } = useSelector(state => {\r\n    return state.reserve\r\n  })\r\n  const openModal = () => {\r\n    setModalVisible(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(resAction.adminReserveView())\r\n  }, [dispatch])\r\n  return (\r\n    <AuthTemplate relative>\r\n      <h3>예약확인</h3>\r\n      {\r\n        viewAdminReserveData &&\r\n        viewAdminReserveData.length > 0 &&\r\n        viewAdminReserveData.map(data =>\r\n          <>\r\n            \r\n            <Button fullWidth style={{ marginTop: \"1rem\" }} onClick={openModal}>\r\n              <p><span>{data.reservedate}</span> <span>{data.reservetime/10000}시</span> <span>{data.orderer_cust === 0 ? data.orderer_owner_nickname : data.orderer_cust_nickname}</span></p>\r\n            </Button>\r\n            {modalVisible && (\r\n              <Modal\r\n                visible={modalVisible}\r\n                closable={true}\r\n                maskClosable={true}\r\n                onClose={closeModal}\r\n              >\r\n                <h3>예약내용</h3>\r\n                <MenuBlock>\r\n                  <p>결제번호: {data.ordercode}</p>\r\n                  <p>가게명: {data.store_name}</p>\r\n                  <p>예약날짜: {data.reservedate}</p>\r\n                  <p>예약시간: {data.reservetime/10000}시</p>\r\n                  <p>예약자: {data.orderer_cust === 0 ? data.orderer_owner_nickname : data.orderer_cust_nickname}</p>\r\n                  <p>인원: {!data.peoples || '' ? 1 : 2}</p>\r\n                  <p>취소여부: {data.cancel}</p>\r\n                </MenuBlock>\r\n              </Modal>\r\n            )}\r\n          </>\r\n        )\r\n      }\r\n\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default ResiCheckPage;","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_actions\\types.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_reducers\\reserve_reducer.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_actions\\reserve_actions.js",["250"],"import client from '../lib/client'\r\nimport {\r\n    RESERVE_ADD,\r\n    RESERVE_INDEX,\r\n    RESERVE_DELETE,\r\n    PRE_RESERVE_DATA,\r\n    RESERVE_DATA,\r\n    ADMIN_RESERVE_DATA\r\n} from './types.js'\r\nimport * as domain from '../lib/server'\r\n\r\n\r\n//예약하기\r\nexport function doReserve({imp_uid, merchant_uid, name, amount, buyer_name, buyer_tel, storeid, reservedate, prepay, peoples, reservetime}){\r\n    const send_data = {\r\n        imp_uid, merchant_uid, name, amount, buyer_name, buyer_tel,\r\n        storeid, reservedate, prepay, peoples, reservetime\r\n    }\r\n    const req = client.post(`${domain.default}api/customers/reserve/${storeid}`, send_data)\r\n        .then(res => res);\r\n\r\n    return {\r\n        type: RESERVE_ADD,\r\n        payload: req\r\n    }\r\n}\r\n\r\n//예약 조회(하나만)\r\nexport function indexReserve(reserveid){\r\n    //console.log(reserveid);\r\n    const req = client.get(`${domain.default}api/customers/reserve/find/${reserveid}`)\r\n                .then(res => res);\r\n\r\n    return {\r\n        type: RESERVE_INDEX,\r\n        payload: req\r\n    }\r\n}\r\n\r\nexport function listReserve() {\r\n    const req = client.get(`${domain.default}api/customers/reserve/`)\r\n                    .then(res => res);\r\n    return {\r\n        type: RESERVE_DATA,\r\n        payload: req\r\n    }\r\n}\r\n\r\nexport function listOldReserve(){\r\n    const req = client.get(`${domain.default}api/customers/old/reserve`)\r\n        .then(res => res);\r\n\r\n    return {\r\n        type: PRE_RESERVE_DATA,\r\n        payload: req\r\n    }\r\n}\r\n\r\nexport function adminReserveView() {\r\n    const req = client.get(`${domain.default}api/owners/reservelist`)\r\n\r\n    return {\r\n        type: ADMIN_RESERVE_DATA,\r\n        payload: req\r\n    }\r\n}",["251","252"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_reducers\\index.js",[],["253","254"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\RegisterPage.js",[],["255","256"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\Navigator.js",["257"],"import React from 'react';\r\nimport './Navigator.css';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Button from '../common/Button'\r\nimport { MdHome, MdSearch, MdPeople } from 'react-icons/md'\r\n\r\nconst Navigator = () => {\r\n  return (\r\n    <div className=\"footer-row\">\r\n      {/*<Button bigfont cyan className=\"footer-column\">\r\n          <Link to=\"/HomePage\">홈</Link>\r\n      </Button>\r\n      <Button bigfont cyan className=\"footer-column\">\r\n          <Link to=\"/SearchPage\">검색</Link>\r\n      </Button>\r\n      <Button bigfont cyan className=\"footer-column\">\r\n          <Link to=\"/MyPage\">마이페이지</Link>\r\n      </Button>*/}\r\n      <Link to=\"/\">\r\n        <Button bigfont cyan className=\"footer-column\">\r\n          <MdHome size=\"2.0rem\" />\r\n        </Button>\r\n      </Link>\r\n\r\n      <Link to=\"/SearchPage\">\r\n        <Button bigfont cyan className=\"footer-column\">\r\n          <MdSearch size=\"2.0rem\" />\r\n        </Button>\r\n      </Link>\r\n      <Link to=\"/MyPage\">\r\n        <Button bigfont cyan className=\"footer-column\">\r\n          <MdPeople size=\"2.0rem\" />\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigator;",["258","259"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\index.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\CancelPage.js",["260"],"import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport AuthForm from '../components/auth/AuthForm';\r\n\r\nconst CancelPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      예약 취소\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default CancelPage;\r\n","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\lib\\server.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\lib\\client.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\StarRate.js",[],["261","262"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\MyResvPage.js",["263"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport Button from \"../components/common/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuBlock from '../components/common/MenuBlock'\r\nimport * as resAction from '../_actions/reserve_actions'\r\nimport * as userAction from '../_actions/user_actions'\r\nimport * as domain from '../lib/server'\r\n\r\n\r\n\r\nconst MyResvPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { viewReserveData } = useSelector(state => state.reserve)\r\n\r\n  useEffect(() => {\r\n    dispatch(userAction.auth());\r\n    dispatch(resAction.listReserve());\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <AuthTemplate>\r\n      나의 예약 현황\r\n      <br />\r\n      <br />\r\n      <MenuBlock>\r\n        {viewReserveData &&\r\n          viewReserveData.length > 0 &&\r\n          viewReserveData.map(data => (\r\n            <>\r\n              <p>{data.reservedate} {data.reservetime/10000}시<br/>\r\n              {data.name}\r\n              <Link to={`/ReviewPage/${data.storeid}`}>\r\n                <Button right>\r\n                  리뷰 작성\r\n                </Button>\r\n                </Link>\r\n              </p>\r\n            </>\r\n          ))\r\n        }\r\n      </MenuBlock>\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default MyResvPage;\r\n",["264","265"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\PreResvPage.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\auth\\AuthTemplate.js",[],["266","267"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\lib\\dateFormat.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\LoginPage.js",[],["268","269"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\radioButton.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\lib\\styles\\palette.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\App.js",["270","271","272"],"import React from 'react';\r\nimport './App.css';\r\nimport Navigator from './components/common/Navigator';\r\nimport {Route, Switch, Link} from 'react-router-dom';\r\nimport MyPage from './pages/MyPage';\r\nimport SearchPage from './pages/SearchPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport MyResvPage from './pages/MyResvPage';\r\nimport PreResvPage from './pages/PreResvPage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport OwnerPage from './pages/OwnerPage';\r\nimport AddStorePage from \"./pages/AddStorePage\"\r\nimport ReviewPage from \"./pages/ReviewPage\"\r\nimport CancelPage from \"./pages/CancelPage\"\r\nimport HomePage from \"./pages/HomePage\"\r\nimport ModStorePage from \"./pages/ModStorePage\"\r\nimport StorePage from \"./pages/StorePage\"\r\nimport ReservePage from \"./pages/ReservePage\"\r\nimport CompletePage from \"./pages/CompletePage\"\r\nimport NotFoundPage from './pages/NotFoundPage'\r\nimport { Helmet } from 'react-helmet-async';\r\nimport ResiCheckPage from './pages/ResiCheckPage'\r\nimport TestReviewPage from './pages/TestReviewPage';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n    <Helmet>\r\n      <title>Mill-Planning 예약서비스</title>\r\n    </Helmet>\r\n      <Route component={LoginPage} path=\"/login\"/>\r\n      <Route component={RegisterPage} path=\"/register\"/>\r\n      <Route component={MyResvPage} path=\"/MyResvPage\"/>\r\n      <Route component={PreResvPage} path=\"/PreResvPage\"/>\r\n      <Route component={ProfilePage} path=\"/ProfilePage\"/>\r\n      <Route component={OwnerPage} path=\"/OwnerPage\"/>\r\n      <Route component={AddStorePage} path=\"/AddStorePage\"/>\r\n      <Route component={TestReviewPage} path=\"/ReviewPage/:storeid\"/>\r\n      <Route component={CancelPage} path=\"/CancelPage\"/>\r\n      <Route component={ModStorePage} path=\"/ModStorePage\"/>\r\n      <Route component={StorePage} path={[\"/StorePage/:storeid\"]}/>\r\n      <Route component={ReservePage} path={[\"/ReservePage/:storeid/:time/:date\", \"/ReservePage/:storeid\"]}/>\r\n      <Route component={CompletePage} path=\"/CompletePage/:reserveid\"/>\r\n      <Route component={ResiCheckPage} path=\"/owner/reserve\"/>\r\n    \r\n      <Switch>\r\n        <Route component={HomePage} exact path=\"/\"/>\r\n        <Route component={MyPage} path=\"/MyPage\"/>\r\n        <Route component={SearchPage} path=\"/SearchPage\"/>\r\n      </Switch>\r\n      \r\n      <Navigator></Navigator>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["273","274"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\TestReviewPage.js",["275","276","277","278","279","280","281"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport { ImageUpload } from \"quill-image-upload\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport * as domain from \"../lib/server\";\r\nimport * as reviewAction from '../_actions/review_action'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst EditorBlock = styled.div`\r\n  /* 페이지 위아래 여백 */\r\n  padding: 1rem;\r\n  align: center;\r\n`;\r\n\r\nconst InputText = styled.input`\r\n    background-color: rgba(112, 191, 255, 0.7);\r\n    border: 0;\r\n    border-radius: 20px;\r\n    width: 100%;\r\n    margin-bottom: 1rem;\r\n    height: 1.8rem;\r\n    padding-left: 1rem;\r\n    font-weight: bold;\r\n\r\n    font-family: \"맑은고딕\"\r\n    background-color: rgba(112, 191, 255, 0.1);\r\n    transition: 800ms ease;\r\n\r\n    &:hover {\r\n        background-color: rgba(112, 191, 255, 0.45);\r\n        transition: 1s ease;\r\n        box-shadow: 0px 4px 20px 0px rgba(20, 20, 20, 0.05);\r\n    }\r\n\r\n    &:focus, &:active{\r\n        outline: 0;\r\n    }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: #1aab8a;\r\n  color: #fff;\r\n  border: none;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 2rem;\r\n  font-size: 1.2em;\r\n  padding: 0 2em;\r\n  cursor: pointer;\r\n  transition: 800ms ease all;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    background: #fff;\r\n    color: #1aab8a;\r\n  }\r\n  &:before,\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    height: 2px;\r\n    width: 0;\r\n    background: #1aab8a;\r\n    transition: 400ms ease all;\r\n  }\r\n  &:after {\r\n    right: inherit;\r\n    top: inherit;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n  &:hover:before,\r\n  &:hover:after {\r\n    width: 100%;\r\n    transition: 800ms ease all;\r\n  }\r\n`;\r\n\r\nconst StarPointButton = styled.button`\r\n  border: 0;\r\n  outline: 0;\r\n\r\n  background-color: rgba(255, 255, 255, 1);\r\n  color: #ffaf0f;\r\n  font-weight: bold;\r\n  font-size: 2rem;\r\n\r\n  font-shadow: -1em 0 black, 0 1em black, 1em 0 black, 0 -1em black;\r\n`;\r\n\r\nfunction TestReviewPage({ history, match }) {\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [clicked, setClicked] = useState([false, false, false, false, false]);\r\n    const [clickedValue, setClickedValue] = useState(-1);\r\n    const dispatch = useDispatch();\r\n\r\n    const modules = {\r\n        toolbar: {\r\n            container: [[\"bold\", \"italic\", \"underline\", \"image\"]],\r\n        }\r\n    };\r\n    const onChangeHandler = function (html) {\r\n        setValue(html);\r\n    };\r\n\r\n    const onTitleChange = function (e) {\r\n        setTitle(e.currentTarget.value);\r\n    };\r\n\r\n    const onStarClick = function (e) {\r\n        let index = e.currentTarget.value;\r\n        setClickedValue(index);\r\n\r\n        let clickStates = [...clicked];\r\n        for (let i = 0; i < 5; i++) {\r\n            if (i <= index) clickStates[i] = true;\r\n            else clickStates[i] = false;\r\n        }\r\n\r\n        setClicked(clickStates);\r\n    };\r\n\r\n    const sendToReview = function (e) {\r\n        e.preventDefault();\r\n\r\n        if (title === '') {\r\n            alert(\"제목을 입력해주세요\")\r\n            return;\r\n        }\r\n\r\n        if (value === '') {\r\n            alert('내용을 입력해주세요');\r\n            return;\r\n        }\r\n\r\n        if (clickedValue === -1) {\r\n            alert(\"별점을 추가해주세요\")\r\n            return\r\n        }\r\n\r\n        const formData = new FormData()\r\n\r\n        searchSrc().map((v, i) => { \r\n            if(v?.length > 1000) { //  \"data:image/png;base64~~~\"는 1000자를 넘어가기 때문에 + base64만 가져오기 위해서\r\n                const imgBase64 = v;\r\n                const file = DataURIToBlob(imgBase64);\r\n\r\n                formData.append('review_img', file, \"newimage.png\");\r\n            }\r\n          })\r\n\r\n        formData.append('title', title);\r\n        formData.append('content', Base64toServerImage());\r\n        formData.append('score', parseInt(clickedValue)+1);\r\n\r\n        dispatch(reviewAction.reviewAdd(formData, match.params.storeid)).then(data => {\r\n            history.push('/');\r\n        })\r\n    }\r\n\r\n    function Base64toServerImage() {\r\n        const changeStr = value.split('>').map(v => { \r\n          if(v.includes(\"<p\")) {\r\n           return v + '>'\r\n         } else if(v.includes(\"</p\")) {\r\n         return v + '>'\r\n         } else if(v.includes(\"<img\")) {\r\n           return false\r\n         } else {\r\n         return false\r\n         } } ).filter(v => v !== false).join('')\r\n      \r\n         return changeStr\r\n      } // <p><img ~~~/></p> => <p></p>\r\n\r\n    const DataURIToBlob = function (dataURI) {\r\n        const splitDataURI = dataURI.split(',')\r\n        const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\r\n        const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\r\n        const ia = new Uint8Array(byteString.length)\r\n        for (let i = 0; i < byteString.length; i++)\r\n            ia[i] = byteString.charCodeAt(i)\r\n\r\n        return new Blob([ia], { type: mimeString })\r\n    }\r\n\r\n    const searchSrc = () => {\r\n        const arr1 = value.split('img').map(v => v.includes('src') === true && v.split(\"src=\"));\r\n        const arr2 = arr1.map(v => v && v[1]?.split(\"></p\"))\r\n        return arr2.map(v => v && v[0].slice(1, v[0]?.length - 1)).filter(v => v !== false);\r\n      } // \"data:image/png;base64~~~\"\r\n\r\n    return (\r\n        <AuthTemplate relative>\r\n            <h1>리뷰쓰기</h1>\r\n            <EditorBlock>\r\n                <InputText\r\n                    type=\"text\"\r\n                    onChange={onTitleChange}\r\n                    value={title}\r\n                    placeholder=\"제목\"\r\n                />\r\n                <ReactQuill\r\n                    style={{ height: \"30vh\" }}\r\n                    theme=\"snow\"\r\n                    value={value}\r\n                    formats={[\"bold\", \"italic\", \"underline\", \"image\"]}\r\n                    modules={modules}\r\n                    placeholder=\"이미지는 한개까지만 가능합니다.\"\r\n                    onChange={(content, delta, source, editor) =>\r\n                        onChangeHandler(editor.getHTML())\r\n                    }\r\n                />\r\n\r\n                <br />\r\n                <br />\r\n                <StarPointButton value={0} onClick={onStarClick}>\r\n                    {clicked[0] ? \"★\" : \"☆\"}\r\n                </StarPointButton>\r\n                <StarPointButton value={1} onClick={onStarClick}>\r\n                    {clicked[1] ? \"★\" : \"☆\"}\r\n                </StarPointButton>\r\n                <StarPointButton value={2} onClick={onStarClick}>\r\n                    {clicked[2] ? \"★\" : \"☆\"}\r\n                </StarPointButton>\r\n                <StarPointButton value={3} onClick={onStarClick}>\r\n                    {clicked[3] ? \"★\" : \"☆\"}\r\n                </StarPointButton>\r\n                <StarPointButton value={4} onClick={onStarClick}>\r\n                    {clicked[4] ? \"★\" : \"☆\"}\r\n                </StarPointButton>\r\n                <br />\r\n                <br />\r\n                <Button onClick={sendToReview}>리뷰작성</Button>\r\n            </EditorBlock>\r\n        </AuthTemplate>\r\n    );\r\n}\r\n\r\nexport default withRouter(TestReviewPage);\r\n",["282","283"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\Button.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_actions\\review_action.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\ModStorePage.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_actions\\user_actions.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_reducers\\store_reducer.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\OwnerPage.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\auth\\AuthForm.js",["284"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\CustomRadioButton.js",["285"],"import React from 'react';\r\nimport styled, { css } from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst Label = styled.label`\r\n  display: inline-block;\r\n  font-weight: bold;\r\n  color: ${palette.gray[8]};\r\n  padding: 0.25rem;\r\n`;\r\n\r\n\r\nconst Menus = [\r\n  { name: '한식' },\r\n  { name: '일식' },\r\n  { name: '중식' },\r\n  { name: '양식' },\r\n];\r\n\r\nexport function CustomRadioButton() {\r\n  return (\r\n    <>\r\n      {Menus.map((menu) => (\r\n        <div key={menu.name}>\r\n          <input\r\n            id={menu.name}\r\n            type=\"radio\"\r\n            name=\"menu-selector\"\r\n            value={menu.name}\r\n          />\r\n          <Label htmlFor={menu.name}>{menu.name}</Label>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\ReviewPage.js",["286"],"import React, { Component } from \"react\";\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport axios from \"axios\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\nimport Button from \"../components/common/Button\";\r\nimport Input from '../components/common/Input'\r\nimport StarRate from '../components/common/StarRate'\r\n\r\n\r\nclass ReviewPage extends Component {\r\n  //별점으로 전달된 값들\r\n  state = {\r\n    idx: 0,\r\n    rating: 0,\r\n    cacheIdx: 0,\r\n    cacheRating: 0\r\n  };\r\n\r\n  _mouseOver = (e, i) => {\r\n    e.persist();\r\n    let offsetX = e.nativeEvent.offsetX;\r\n    let clientX = e.target.clientWidth;\r\n\r\n    if (offsetX > clientX / 2) {\r\n      let value = 2;\r\n      this.setState({\r\n        idx: i,\r\n        rating: value\r\n      });\r\n    } else {\r\n      let value = 1;\r\n      this.setState({\r\n        idx: i,\r\n        rating: value\r\n      });\r\n    }\r\n  };\r\n  \r\n  handleChange = (i, v) => {\r\n    this.setState({\r\n      idx: 0,\r\n      rating: 0,\r\n      cacheIdx: i,\r\n      cacheRating: v\r\n    });\r\n  };\r\n\r\n  //리뷰에디터 관련\r\n\r\n  editorRef = React.createRef();\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      content: \"\",\r\n    };\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      content: this.editorRef.current.getInstance().getHtml(),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <AuthTemplate>\r\n        <Input fullWidth placeholder=\"리뷰제목\"></Input>\r\n        <Editor\r\n          previewStyle=\"vertical\"\r\n          height=\"300px\"\r\n          initialEditType=\"wysiwyg\"\r\n          placeholder=\"리뷰내용\"\r\n          ref={this.editorRef}\r\n        />\r\n         <StarRate\r\n        _mouseOver={this._mouseOver}\r\n        onChange={this.handleChange}\r\n        idx={this.state.idx}\r\n        rating={this.state.rating}\r\n        cacheIdx={this.state.cacheIdx}\r\n        cacheRating={this.state.cacheRating}\r\n      />\r\n        <Button cyan right onClick={this.handleClick}>저장</Button>\r\n        </AuthTemplate>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReviewPage;\r\n","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\modal\\Modal.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\auth\\AuthStoreForm.js",["287","288"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Button from \"../common/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * 관리자 가게 추가 및 가게 정보 수정\r\n */\r\n\r\nconst AuthStoreFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${palette.gray[8]};\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\n/**\r\n * 스타일링된 input\r\n */\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${palette.gray[5]};\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  width: 100%;\r\n  &:focus {\r\n    color: $oc-teal-7;\r\n    border-bottom: 1px solid ${palette.gray[7]};\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\n/**\r\n * 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\r\n */\r\nconst Footer = styled.div`\r\n  margin-top: 2rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${palette.gray[6]};\r\n    text-decoration: underline;\r\n    &:hover {\r\n      color: ${palette.gray[9]};\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst textMap = {\r\n  login: \"로그인\",\r\n  register: \"회원가입\",\r\n};\r\n\r\n/**\r\n * 에러를 보여줍니다\r\n */\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  text-align: center;\r\n  font-size: 0.875rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthStoreForm = ({ props, type }) => {\r\n  const text = textMap[type];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n\r\n  function onEmailChange(e) {\r\n    setEmail(e.currentTarget.value);\r\n  }\r\n\r\n  function onPasswordChange(e) {\r\n    setPassword(e.currentTarget.value);\r\n  }\r\n\r\n  async function loginUser(body) {\r\n    const result = await axios.post(\"/api/auth/login\", body);\r\n\r\n    console.log(result);\r\n\r\n    return result;\r\n  }\r\n\r\n  function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n    const body = {\r\n      email: Email,\r\n      password: Password,\r\n      admin: false,\r\n    };\r\n\r\n    loginUser(body);\r\n  }\r\n\r\n  return (\r\n    <AuthStoreFormBlock>\r\n      <h3>{text}</h3>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <StyledInput\r\n          placeholder=\"아이디\"\r\n          type=\"email\"\r\n          value={Email}\r\n          onChange={onEmailChange}\r\n        />\r\n        <br />\r\n        <StyledInput\r\n          placeholder=\"비밀번호\"\r\n          type=\"password\"\r\n          value={Password}\r\n          onChange={onPasswordChange}\r\n        />\r\n        <br />\r\n        {type === \"register\" && <StyledInput placeholder=\"전화번호\" />}\r\n        <Button\r\n          cyan\r\n          fullWidth\r\n          style={{ marginTop: \"1rem\" }}\r\n          type=\"submit\"\r\n        >\r\n          {text}\r\n        </Button>\r\n      </form>\r\n      <Footer>\r\n        {type === \"login\" ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </Footer>\r\n    </AuthStoreFormBlock>\r\n  );\r\n};\r\n\r\n// const AuthStoreForm = ({ type, form, onChange, onSubmit, error }) => {\r\n//   const text = textMap[type];\r\n//   return (\r\n//     <AuthStoreFormBlock>\r\n//       <h3>{text}</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//         <StyledInput\r\n//           autoComplete=\"username\"\r\n//           name=\"username\"\r\n//           placeholder=\"아이디\"\r\n//           onChange={onChange}\r\n//           value={form.username}\r\n//         />\r\n//         <StyledInput\r\n//           autoComplete=\"new-password\"\r\n//           name=\"password\"\r\n//           placeholder=\"비밀번호\"\r\n//           type=\"password\"\r\n//           onChange={onChange}\r\n//           value={form.password}\r\n//         />\r\n//         {type === 'register' && (\r\n//           <StyledInput\r\n//             autoComplete=\"new-password\"\r\n//             name=\"passwordConfirm\"\r\n//             placeholder=\"비밀번호 확인\"\r\n//             type=\"password\"\r\n//             onChange={onChange}\r\n//             value={form.passwordConfirm}\r\n//           />\r\n//         )}\r\n//         {error && <ErrorMessage>{error}</ErrorMessage>}\r\n//         <Button cyan fullWidth style={{ marginTop: '1rem' }}>\r\n//           {text}\r\n//         </Button>\r\n//       </form>\r\n//       <Footer>\r\n//         {type === 'login' ? (\r\n//           <Link to=\"/register\">회원가입</Link>\r\n//         ) : (\r\n//           <Link to=\"/login\">로그인</Link>\r\n//         )}\r\n//       </Footer>\r\n//     </AuthStoreFormBlock>\r\n//   );\r\n// };\r\n\r\nexport default AuthStoreForm;\r\n","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_reducers\\user_reducer.js",[],["289","290"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\ImgDiv.js",["291"],"import React from 'react';\r\nimport styled, { css } from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\n\r\nconst StyledImg = styled.img`\r\n  float: center;\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 0.25rem;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border: 1px solid ${palette.gray[5]};\r\n  height: 5.5rem;\r\n  width: 7rem;\r\n  margin-right: 1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst ImgDiv = () => <StyledImg/>\r\n\r\nexport default ImgDiv;\r\n","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\reportWebVitals.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\ProfilePage.js",["292","293"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport Button from \"../components/common/Button\";\r\nimport MenuBlock from \"../components/common/MenuBlock\"\r\nimport Input from '../components/common/Input'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport * as userAction from '../_actions/user_actions'\r\n\r\nconst ProfilePage = ({ history }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const { account } = useSelector(state => state.user)\r\n\r\n  const [currentPassword, setCurrentPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [newPasswordConfirm, setNewPasswordConfirm] = useState('')\r\n  const [newTel, setNewTel] = useState('')\r\n  const [newNickname, setNewNickname] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (!account) {\r\n      history.push('/')\r\n    }\r\n    dispatch(userAction.auth()).then(data => {\r\n      const { nickname, tel } = data.payload.data.account\r\n\r\n      setNewTel(tel || '')\r\n      setNewNickname(nickname || '')\r\n    });\r\n  }, [dispatch])\r\n\r\n  const onChangeCurrentPassword = (e) => {\r\n    switch (e.target.name) {\r\n      case \"currentPassword\":\r\n        setCurrentPassword(e.currentTarget.value)\r\n        break;\r\n      case \"newPassword\":\r\n        setNewPassword(e.currentTarget.value)\r\n        break;\r\n      case \"newPasswordConfirm\":\r\n        setNewPasswordConfirm(e.currentTarget.value)\r\n        break;\r\n      case \"newNickname\":\r\n        setNewNickname(e.currentTarget.value);\r\n        break;\r\n      case \"newTel\":\r\n        setNewTel(e.currentTarget.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const onProfileEditHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const profileData = {\r\n      currentPassword,\r\n      newPassword,\r\n      newNickname,\r\n      newTel\r\n    }\r\n\r\n    if (!account.account.token || '') {\r\n      if (!currentPassword || '') {\r\n        alert(\"현재 비밀번호를 입력해주세요\")\r\n        return;\r\n      }\r\n      if (!newPassword || '') {\r\n        alert(\"새로운 비밀번호를 입력해주세요\")\r\n        return;\r\n      }\r\n      if ((!newPasswordConfirm || '') ||\r\n        (newPassword !== newPasswordConfirm)) {\r\n        alert(\"새로운 비밀번호가 일치하지않습니다.\")\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n\r\n    if (!newNickname || '') {\r\n      alert(\"닉네임을 입력해주세요\")\r\n      return;\r\n    }\r\n\r\n    dispatch(userAction.profile_check(profileData)).then(data => {\r\n      const { passwordConfirm } = data.payload.data\r\n\r\n      if (passwordConfirm) {\r\n        dispatch(userAction.profile_edit(profileData))\r\n\r\n        alert(\"성공적으로 프로필이 변경되었습니다.\")\r\n        return history.push('/');\r\n      }\r\n\r\n      alert('현재 비밀번호가 다릅니다.')\r\n      setCurrentPassword('');\r\n      return false;\r\n    })\r\n  }\r\n\r\n  return (\r\n\r\n    <AuthTemplate relative>\r\n      {account && account.account && <>\r\n        <h3>프로필수정</h3>\r\n        <form onSubmit={onProfileEditHandler}>\r\n          <MenuBlock>{account.account.email || account.account.nickname + '(카카오)'}</MenuBlock>\r\n          {\r\n            !account.account.token && <>\r\n              <Input type=\"password\"\r\n                name=\"currentPassword\"\r\n                fullWidth\r\n                placeholder=\"현재비밀번호\"\r\n                value={currentPassword}\r\n                onChange={onChangeCurrentPassword} />\r\n              <Input type=\"password\"\r\n                name=\"newPassword\"\r\n                fullWidth\r\n                placeholder=\"새비밀번호\"\r\n                value={newPassword}\r\n                onChange={onChangeCurrentPassword} />\r\n              <Input type=\"password\"\r\n                name=\"newPasswordConfirm\"\r\n                fullWidth\r\n                placeholder=\"비밀번호재입력\"\r\n                value={newPasswordConfirm}\r\n                onChange={onChangeCurrentPassword} />\r\n            </>\r\n          }\r\n\r\n            전화번호\r\n          <Input type=\"text\"\r\n            name=\"newTel\"\r\n            placeholder=\"전화번호 ['-'는 제외하고 입력]\"\r\n            fullWidth\r\n            pattern=\"01[016789]\\d{7,8}\"\r\n            title=\"형식 01012345678\"\r\n            value={newTel}\r\n            onChange={onChangeCurrentPassword} /><br />\r\n            닉네임\r\n          <Input type=\"text\"\r\n            name=\"newNickname\"\r\n            fullWidth\r\n            placeholder=\"닉네임\"\r\n            value={newNickname}\r\n            onChange={onChangeCurrentPassword} /><br />\r\n\r\n          <Button type=\"submit\" fullWidth cyan>\r\n            프로필 수정\r\n          </Button>\r\n        </form>\r\n      </>\r\n      }\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProfilePage);","C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\MenuBlock.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\components\\common\\Input.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\_reducers\\review_reducer.js",[],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\ReservePage.js",["294","295","296"],"C:\\Users\\최영재\\Desktop\\ys\\Mill-Planning-Project\\client\\mill-planning\\src\\pages\\NotFoundPage.js",["297"],{"ruleId":"298","severity":1,"message":"299","line":2,"column":23,"nodeType":"300","messageId":"301","endLine":2,"endColumn":34},{"ruleId":"298","severity":1,"message":"302","line":8,"column":8,"nodeType":"300","messageId":"301","endLine":8,"endColumn":14},{"ruleId":"298","severity":1,"message":"303","line":75,"column":10,"nodeType":"300","messageId":"301","endLine":75,"endColumn":18},{"ruleId":"298","severity":1,"message":"304","line":76,"column":20,"nodeType":"300","messageId":"301","endLine":76,"endColumn":31},{"ruleId":"298","severity":1,"message":"305","line":77,"column":21,"nodeType":"300","messageId":"301","endLine":77,"endColumn":33},{"ruleId":"298","severity":1,"message":"306","line":78,"column":10,"nodeType":"300","messageId":"301","endLine":78,"endColumn":17},{"ruleId":"298","severity":1,"message":"307","line":78,"column":19,"nodeType":"300","messageId":"301","endLine":78,"endColumn":29},{"ruleId":"308","severity":1,"message":"309","line":122,"column":43,"nodeType":"310","messageId":"311","endLine":122,"endColumn":45},{"ruleId":"298","severity":1,"message":"312","line":187,"column":12,"nodeType":"300","messageId":"301","endLine":187,"endColumn":16},{"ruleId":"298","severity":1,"message":"313","line":187,"column":18,"nodeType":"300","messageId":"301","endLine":187,"endColumn":23},{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"298","severity":1,"message":"318","line":7,"column":5,"nodeType":"300","messageId":"301","endLine":7,"endColumn":17},{"ruleId":"314","replacedBy":"319"},{"ruleId":"316","replacedBy":"320"},{"ruleId":"298","severity":1,"message":"321","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":16},{"ruleId":"298","severity":1,"message":"322","line":12,"column":13,"nodeType":"300","messageId":"301","endLine":12,"endColumn":19},{"ruleId":"314","replacedBy":"323"},{"ruleId":"316","replacedBy":"324"},{"ruleId":"298","severity":1,"message":"325","line":6,"column":10,"nodeType":"300","messageId":"301","endLine":6,"endColumn":27},{"ruleId":"314","replacedBy":"326"},{"ruleId":"316","replacedBy":"327"},{"ruleId":"298","severity":1,"message":"328","line":1,"column":17,"nodeType":"300","messageId":"301","endLine":1,"endColumn":25},{"ruleId":"298","severity":1,"message":"329","line":5,"column":10,"nodeType":"300","messageId":"301","endLine":5,"endColumn":15},{"ruleId":"314","replacedBy":"330"},{"ruleId":"316","replacedBy":"331"},{"ruleId":"298","severity":1,"message":"332","line":7,"column":13,"nodeType":"300","messageId":"301","endLine":7,"endColumn":24},{"ruleId":"298","severity":1,"message":"333","line":5,"column":5,"nodeType":"300","messageId":"301","endLine":5,"endColumn":19},{"ruleId":"314","replacedBy":"334"},{"ruleId":"316","replacedBy":"335"},{"ruleId":"314","replacedBy":"336"},{"ruleId":"316","replacedBy":"337"},{"ruleId":"314","replacedBy":"338"},{"ruleId":"316","replacedBy":"339"},{"ruleId":"298","severity":1,"message":"329","line":3,"column":10,"nodeType":"300","messageId":"301","endLine":3,"endColumn":15},{"ruleId":"314","replacedBy":"340"},{"ruleId":"316","replacedBy":"341"},{"ruleId":"298","severity":1,"message":"321","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":16},{"ruleId":"314","replacedBy":"342"},{"ruleId":"316","replacedBy":"343"},{"ruleId":"298","severity":1,"message":"344","line":9,"column":13,"nodeType":"300","messageId":"301","endLine":9,"endColumn":19},{"ruleId":"314","replacedBy":"345"},{"ruleId":"316","replacedBy":"346"},{"ruleId":"314","replacedBy":"347"},{"ruleId":"316","replacedBy":"348"},{"ruleId":"314","replacedBy":"349"},{"ruleId":"316","replacedBy":"350"},{"ruleId":"298","severity":1,"message":"351","line":4,"column":24,"nodeType":"300","messageId":"301","endLine":4,"endColumn":28},{"ruleId":"298","severity":1,"message":"352","line":14,"column":8,"nodeType":"300","messageId":"301","endLine":14,"endColumn":18},{"ruleId":"298","severity":1,"message":"353","line":21,"column":8,"nodeType":"300","messageId":"301","endLine":21,"endColumn":20},{"ruleId":"314","replacedBy":"354"},{"ruleId":"316","replacedBy":"355"},{"ruleId":"298","severity":1,"message":"356","line":1,"column":17,"nodeType":"300","messageId":"301","endLine":1,"endColumn":23},{"ruleId":"298","severity":1,"message":"357","line":1,"column":25,"nodeType":"300","messageId":"301","endLine":1,"endColumn":34},{"ruleId":"298","severity":1,"message":"358","line":3,"column":22,"nodeType":"300","messageId":"301","endLine":3,"endColumn":27},{"ruleId":"298","severity":1,"message":"359","line":4,"column":10,"nodeType":"300","messageId":"301","endLine":4,"endColumn":21},{"ruleId":"298","severity":1,"message":"344","line":7,"column":13,"nodeType":"300","messageId":"301","endLine":7,"endColumn":19},{"ruleId":"298","severity":1,"message":"299","line":11,"column":10,"nodeType":"300","messageId":"301","endLine":11,"endColumn":21},{"ruleId":"308","severity":1,"message":"309","line":151,"column":32,"nodeType":"310","messageId":"311","endLine":151,"endColumn":34},{"ruleId":"314","replacedBy":"360"},{"ruleId":"316","replacedBy":"361"},{"ruleId":"298","severity":1,"message":"362","line":66,"column":7,"nodeType":"300","messageId":"301","endLine":66,"endColumn":19},{"ruleId":"298","severity":1,"message":"363","line":2,"column":18,"nodeType":"300","messageId":"301","endLine":2,"endColumn":21},{"ruleId":"298","severity":1,"message":"364","line":3,"column":8,"nodeType":"300","messageId":"301","endLine":3,"endColumn":13},{"ruleId":"298","severity":1,"message":"362","line":64,"column":7,"nodeType":"300","messageId":"301","endLine":64,"endColumn":19},{"ruleId":"298","severity":1,"message":"365","line":74,"column":9,"nodeType":"300","messageId":"301","endLine":74,"endColumn":17},{"ruleId":"314","replacedBy":"366"},{"ruleId":"316","replacedBy":"367"},{"ruleId":"298","severity":1,"message":"363","line":2,"column":18,"nodeType":"300","messageId":"301","endLine":2,"endColumn":21},{"ruleId":"298","severity":1,"message":"351","line":7,"column":10,"nodeType":"300","messageId":"301","endLine":7,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":31,"column":6,"nodeType":"370","endLine":31,"endColumn":16,"suggestions":"371"},{"ruleId":"298","severity":1,"message":"351","line":4,"column":10,"nodeType":"300","messageId":"301","endLine":4,"endColumn":14},{"ruleId":"298","severity":1,"message":"372","line":6,"column":8,"nodeType":"300","messageId":"301","endLine":6,"endColumn":14},{"ruleId":"298","severity":1,"message":"322","line":12,"column":13,"nodeType":"300","messageId":"301","endLine":12,"endColumn":19},{"ruleId":"298","severity":1,"message":"351","line":2,"column":21,"nodeType":"300","messageId":"301","endLine":2,"endColumn":25},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'ImgDiv' is defined but never used.","'storeImg' is assigned a value but never used.","'setMenuName' is assigned a value but never used.","'setMenuPrice' is assigned a value but never used.","'menuImg' is assigned a value but never used.","'setMenuImg' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'name' is assigned a value but never used.","'value' is assigned a value but never used.","no-native-reassign",["373"],"no-negated-in-lhs",["374"],"'STORE_UPDATE' is defined but never used.",["373"],["374"],"'AuthForm' is defined but never used.","'format' is defined but never used.",["373"],["374"],"'CustomRadioButton' is defined but never used.",["373"],["374"],"'useState' is defined but never used.","'Route' is defined but never used.",["373"],["374"],"'storeAction' is defined but never used.","'RESERVE_DELETE' is defined but never used.",["373"],["374"],["373"],["374"],["373"],["374"],["373"],["374"],["373"],["374"],"'domain' is defined but never used.",["373"],["374"],["373"],["374"],["373"],["374"],"'Link' is defined but never used.","'ReviewPage' is defined but never used.","'NotFoundPage' is defined but never used.",["373"],["374"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'Quill' is defined but never used.","'ImageUpload' is defined but never used.",["373"],["374"],"'ErrorMessage' is assigned a value but never used.","'css' is defined but never used.","'axios' is defined but never used.","'dispatch' is assigned a value but never used.",["373"],["374"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'account' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["375"],"'Moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"376","fix":"377"},"Update the dependencies array to be: [account, dispatch, history]",{"range":"378","text":"379"},[1118,1128],"[account, dispatch, history]"]