{"version":3,"sources":["lib/dateFormat.js","components/common/Navigator.js","lib/styles/palette.js","components/common/Button.js","components/auth/AuthTemplate.js","lib/client.js","_actions/types.js","lib/server.js","_actions/user_actions.js","components/auth/AuthForm.js","pages/MyPage.js","components/common/Input.js","components/common/MenuBlock.js","_actions/store_actions.js","pages/SearchPage.js","pages/LoginPage.js","pages/RegisterPage.js","pages/MyResvPage.js","_actions/reserve_actions.js","pages/PreResvPage.js","pages/ProfilePage.js","pages/OwnerPage.js","components/common/ImgDiv.js","pages/AddStorePage.js","pages/ReviewPage.js","pages/CancelPage.js","pages/HomePage.js","components/auth/AuthStoreForm.js","pages/ModStorePage.js","components/modal/Modal.js","components/common/radioButton.js","pages/StorePage.js","_actions/review_action.js","pages/ReservePage.js","pages/CompletePage.js","pages/NotFoundPage.js","App.js","reportWebVitals.js","_reducers/user_reducer.js","_reducers/reserve_reducer.js","_reducers/store_reducer.js","_reducers/review_reducer.js","_reducers/index.js","index.js"],"names":["Date","prototype","format","fomatter","this","valueOf","weekKorName","weekKorShortName","weekEngName","weekEngShortName","date","replace","normalize","getFullYear","sub","getMonth","getDate","getDay","getHours","getMinutes","getSeconds","String","string","len","str","i","length","Number","toString","Navigator","className","to","palette","gray","cyan","yellow","buttonStyle","css","props","fullWidth","right","footer","vertex","StyledButton","styled","button","StyledLink","Link","Button","AuthTemplateBlock","div","relative","WhiteBox","AuthTemplate","children","axios","defaults","withCredentials","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","CHECK_USER","STORE_SEARCH","STORE_LIMIT_SEARCH","STORE_INFO","STORE_ADD","STORE_UPDATE","RESERVE_ADD","RESERVE_INDEX","RESERVE_DELETE","PRE_RESERVE_DATA","RESERVE_DATA","REVIEW_ADD","REVIEW_INDEX","domain","auth","req","client","get","then","response","type","payload","AuthFormBlock","StyledInput","input","Footer","textMap","login","register","Kakao","window","withRouter","history","text","dispatch","useDispatch","useState","Email","setEmail","Password","setPassword","tel","setTel","nickname","setNickname","admin","setAdmin","existUser","setExistUser","align","width","inactiveLabel","activeLabel","value","onToggle","e","onSubmit","preventDefault","alert","body","email","password","dataToSubmit","userType","post","res","registerUser","data","push","loginUser","placeholder","onChange","currentTarget","onClick","isExistUser","isExist","style","marginTop","xsrfCookieName","xsrfHeaderName","redirectUri","console","log","Auth","authorize","scope","MyPage","account","useSelector","state","user","useEffect","logout","StyledBox","short","high","Input","StyleBlock","MenuBlock","storeInfo","storeid","SearchPage","search","setSearch","selectCategories","setSelectCategories","selectIndex","setSelectIndex","arrayStoreList","store","onSelectChange","selection","parseInt","keyword","main","detail","storeAction","name","checked","bold","map","src","store_img","alt","LoginPage","RegisterPage","MyResvPage","viewReserveData","reserve","userAction","resAction","reservedate","reservetime","reserveid","PreResvPage","viewPreReserveData","ProfilePage","OwnerPage","white","round","StyledImg","img","ImgDiv","AddStorePage","overflow","float","ReviewPage","CancelPage","HomePage","homeArrayStoreList","itemsToShow","AuthStoreFormBlock","AuthStoreForm","a","result","ModStorePage","ModalWrapper","visible","ModalOverlay","ModalInner","Modal","onClose","maskClosable","closable","target","tabIndex","ContainRadioButtonDiv","font_size","StorePage","match","params","findStoreInfo","indexReview","review","resDateIndex","setResDateIndex","radioIndex","setRadioIndex","modalVisible","setModalVisible","reviewAction","radioCheckHandler","defaultValue","address","star","average","Array","n","index","itemToShow","menu","price","center","title","writer","content","score","reviewid","curItem","curPageIndex","now","disabled","id","htmlFor","time","prepay","identificationCode","pg","pay_method","merchant_uid","getTime","amount","buyer_email","buyer_tel","buyer_name","onFailed","err","onSuccess","resData","imp_uid","peoples","send_data","insert_reserve","render","renderProps","CompletePage","indexReserveData","ordercode","c_nickname","o_nickname","App","component","path","ReservePage","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","error","action","loginSuccess","status","checkIsExistUser","dateplan","payment","reserveAction","insertReserveSuccess","deleteReserveSuccess","storeReducer","insertStoreSuccess","updateStoreSuccess","reviewAddSuccess","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","promiseMiddleware","ReduxThunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.94c2f141.chunk.js","sourcesContent":["// eslint-disable-next-line no-extend-native\r\nDate.prototype.format = function(fomatter) {\r\n    if(!this.valueOf()) return '';\r\n\r\n    const weekKorName = [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"];\r\n    const weekKorShortName = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n    const weekEngName = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const weekEngShortName = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    const date = this;\r\n\r\n    return fomatter.replace(/(yyyy|yy|MM|dd|E|hh|mm|ss|a\\/p)/gi, function(normalize){\r\n        switch(normalize) {\r\n            case 'yyyy': return date.getFullYear();                 //년 4자리\r\n            case 'yy': return (date.getFullYear() % 1000).sub(2);   //년 2자리\r\n            case 'MM': return (date.getMonth() + 1).sub(2);         //월 2자리\r\n            case 'dd': return (date.getDate()).sub(2);          //일 2자리\r\n            case 'KS': return weekKorShortName(date.getDay());      //요일 (한글 한글자)\r\n            case 'KL': return weekKorName(date.getDay());           //요일 (한글 전체)\r\n            case 'ES': return weekEngShortName(date.getDay());      //요일 (영어 세글자)\r\n            case 'EL': return weekEngName(date.getDay());           //요일 (영어 전체)\r\n            case 'HH': return date.getHours().sub(2);               //24시 기준 2자리\r\n            case 'hh': return (date.getHours() % 12).sub(2);        //12시간 기준 2자리\r\n            case 'mm': return date.getMinutes().sub(2);             //분 2자리\r\n            case 'ss': return date.getSeconds().sub(2);             //초 2자리\r\n            case 'a/p': return date.getHours() < 12 ? \"오전\" : \"오후\"//오전오후 구분\r\n            default: return fomatter;     \r\n        }\r\n    });\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.string = function(len){\r\n    let str = '', i = 0;\r\n    while (i ++ < len) {\r\n        str += this;\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.sub = function(len) {\r\n    return \"0\".string(len - this.length) + this;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nNumber.prototype.sub = function(len) {\r\n    return this.toString().sub(len);\r\n}\r\n","import React from 'react';\r\nimport './Navigator.css';\r\nimport {Route, Link} from 'react-router-dom';\r\n\r\nconst Navigator = () => {\r\n  return (\r\n    <div className=\"footer-row\">\r\n      <div className=\"footer-column\">\r\n          <Link to=\"/\">홈</Link>\r\n      </div>\r\n      <div className=\"footer-column\">\r\n          <Link to=\"/SearchPage\">검색</Link>\r\n      </div>\r\n      <div className=\"footer-column\">\r\n          <Link to=\"/MyPage\">마이페이지</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigator;","const palette = {\r\n    gray: [\r\n      '#f8f9fa',\r\n      '#f1f3f5',\r\n      '#e9ecef',\r\n      '#dee2e6',\r\n      '#ced4da',\r\n      '#adb5bd',\r\n      '#868e96',\r\n      '#495057',\r\n      '#343a40',\r\n      '#212529'\r\n    ],\r\n    cyan: [\r\n      '#e3fafc',\r\n      '#c5f6fa',\r\n      '#99e9f2',\r\n      '#66d9e8',\r\n      '#3bc9db',  \r\n      '#22b8cf',\r\n      '#15aabf',\r\n      '#1098ad',\r\n      '#0c8599',\r\n      '#0b7285'\r\n    ],\r\n    yellow: [\r\n      '#fdfae5',\r\n      '#faf3c0',\r\n      '#f5ea92',\r\n      '#f3e260',\r\n      '#f5dd29',\r\n      '#f2d600',\r\n      '#e6c60d',\r\n      '#d9b51c',\r\n      '#cca42b',\r\n    ]\r\n  };\r\n  \r\n  export default palette;","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst buttonStyle = css`\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  padding: 0.25rem 1rem;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  background: ${palette.gray[8]};\r\n  &:hover {\r\n    background: ${palette.gray[6]};\r\n  }\r\n\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      font-size: 1.125rem;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.cyan[5]};\r\n      &:hover {\r\n        background: ${palette.cyan[4]};\r\n      }\r\n    `}\r\n\r\n    ${(props) =>\r\n    props.right &&\r\n    css`\r\n      float: right;\r\n    `}\r\n\r\n    ${(props) =>\r\n    props.footer &&\r\n    css`\r\n      position: absolute;\r\n      bottom: 0;\r\n    `}\r\n      \r\n    ${(props) =>\r\n    props.vertex &&\r\n    css`\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return props.to ? (\r\n    <StyledLink {...props} cyan={props.cyan ? 1 : 0} />\r\n  ) : (\r\n    <StyledButton {...props} />\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 회원가입 / 로그인 페이지의 레이아웃을 담당하는 컴포넌트입니다.\r\n */\r\n\r\n/* 화면 전체를 채움 */\r\nconst AuthTemplateBlock = styled.div`\r\n\r\n${({ relative }) =>\r\n    relative ? css`\r\n      position: relative;\r\n      padding: 1rem 0 5rem 0;\r\n    ` :\r\n      css`position: absolute;`\r\n  }\r\n  \r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: ${palette.gray[2]};\r\n  /* flex로 내부 내용 중앙 정렬 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  vertical-align: middle;\r\n`;\r\n\r\n/* 흰색 박스 */\r\nconst WhiteBox = styled.div`\r\n  .logo-area {\r\n    display: block;\r\n    padding-bottom: 2rem;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    letter-spacing: 2px;\r\n  }\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 360px;\r\n  background: white;\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({ relative, children }) => {\r\n  return (\r\n\r\n    <AuthTemplateBlock relative={relative}>\r\n      <WhiteBox>\r\n        <div className=\"logo-area\">\r\n          <Link to=\"/\">Mill-Planning</Link>\r\n        </div>\r\n        {children}\r\n      </WhiteBox>\r\n    </AuthTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true;\r\n\r\nexport default axios;\r\n","export const LOGIN_USER = \"login_user\"\r\nexport const REGISTER_USER = \"register_user\"\r\nexport const AUTH_USER = \"auth_user\"\r\nexport const LOGOUT_USER = \"logout_user\"\r\nexport const CHECK_USER = 'check_user'\r\n\r\nexport const STORE_SEARCH = 'store_search'\r\nexport const STORE_LIMIT_SEARCH = 'store_limit_search'\r\nexport const STORE_INFO = 'store_info'\r\nexport const STORE_ADD = 'store_add'\r\nexport const STORE_UPDATE = ' store_update'\r\n\r\nexport const RESERVE_ADD = 'reserve_add'\r\nexport const RESERVE_INDEX = 'reserve_index'\r\nexport const RESERVE_DELETE = 'reserve_delete';\r\nexport const PRE_RESERVE_DATA = 'pre_reserve_data';\r\nexport const RESERVE_DATA = 'reserve_data';\r\n\r\nexport const REVIEW_ADD = 'review_add';\r\nexport const REVIEW_INDEX = 'review_index';","const domain = \"http://millplanning.ml/\"\r\n\r\nexport default domain;\r\n","import client from '../lib/client'\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    CHECK_USER\r\n} from './types.js'\r\nimport * as domain from '../lib/server'\r\n\r\n//로그인\r\nexport function loginUser(dataToSubmit){\r\n    const req = client.post(`${domain.default}api/auth/login`, dataToSubmit)\r\n        .then(res => res)\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: req\r\n    }\r\n}\r\n\r\n//회원가입\r\nexport function registerUser(dataToSubmit, admin){\r\n    const userType = admin ? 'owners' : 'customers'\r\n    const req = client.post(`${domain.default}api/${userType}/register`, dataToSubmit)\r\n        .then(res => res)\r\n\r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: req\r\n    }\r\n}\r\n\r\nexport function isExistUser(email, admin) {\r\n    const req = client.get(`${domain.default}api/auth/findbyid?email=${email}&admin=${admin}`).then(res=>res)\r\n\r\n    return {\r\n        type: CHECK_USER,\r\n        payload: req\r\n    }\r\n}\r\n\r\n//인증\r\nexport function auth(){\r\n    const req = client.get(`${domain.default}api/auth/`)\r\n                .then(response => {\r\n                    return response;\r\n                })\r\n\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: req\r\n    }\r\n}\r\n\r\n//로그아웃\r\nexport function logout() {\r\n    const req = client.get(`${domain.default}api/auth/logout`)\r\n                    .then(response => response)\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: req\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { useDispatch } from 'react-redux'\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Button from \"../common/Button\";\r\nimport axios from \"axios\";\r\nimport {registerUser, loginUser, auth, isExistUser} from '../../_actions/user_actions'\r\nimport * as domain from '../../lib/server'\r\nimport ToggleButton from 'react-toggle-button'\r\n\r\n/**\r\n * 회원가입 또는 로그인 폼을 보여줍니다.\r\n */\r\n\r\nconst AuthFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${palette.gray[8]};\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\n/**\r\n * 스타일링된 input\r\n */\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${palette.gray[5]};\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  width: 100%;\r\n  &:focus {\r\n    color: $oc-teal-7;\r\n    border-bottom: 1px solid ${palette.gray[7]};\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\n/**\r\n * 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\r\n */\r\nconst Footer = styled.div`\r\n  margin-top: 2rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${palette.gray[6]};\r\n    text-decoration: underline;\r\n    &:hover {\r\n      color: ${palette.gray[9]};\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst textMap = {\r\n  login: \"로그인\",\r\n  register: \"회원가입\",\r\n};\r\n\r\n/**\r\n * 에러를 보여줍니다\r\n */\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  text-align: center;\r\n  font-size: 0.875rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\n\r\nconst { Kakao } = window;\r\n\r\nconst AuthForm = ({ history, type }) => {\r\n  const text = textMap[type];\r\n  const dispatch = useDispatch();\r\n\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [tel, setTel] = useState('');\r\n  const [nickname, setNickname] = useState('');\r\n  const [admin, setAdmin] = useState(false)\r\n  const [existUser, setExistUser] = useState(true);\r\n\r\n  function onEmailChange(e) {\r\n    setEmail(e.currentTarget.value);\r\n  }\r\n\r\n  function onPasswordChange(e) {\r\n    setPassword(e.currentTarget.value);\r\n  }\r\n\r\n  function onTelChange(e) {\r\n    setTel(e.currentTarget.value);\r\n  }\r\n\r\n  function onNicknameChange(e) {\r\n    setNickname(e.currentTarget.value);\r\n  }\r\n\r\n  function onAdminToggle(e) {\r\n    setAdmin(!e);\r\n  }\r\n\r\n  function isExistUserCheck(e) {\r\n    if(!Email || '') {\r\n      alert('이메일 칸이 비어있습니다.');\r\n      return;\r\n    }\r\n\r\n    dispatch(isExistUser(Email, admin)).then(data => {\r\n      const {isExist} = data.payload.data;\r\n      \r\n      setExistUser(isExist);\r\n      alert(isExist ? '중복되었거나 잘못된 이메일입니다.' : '가입하셔도 좋습니다');\r\n    });\r\n  }\r\n\r\n  function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    if(!Email || '') {\r\n      alert('이메일을 입력해주세요')\r\n      return;\r\n    }\r\n    if(!Password || '') {\r\n      alert('패스워드를 입력해주세요');\r\n      return;\r\n    }\r\n\r\n    if(type === \"register\" && existUser) {\r\n      alert('중복된 이메일입니다.');\r\n      return;\r\n    }\r\n\r\n    const body = {\r\n      email: Email,\r\n      password: Password,\r\n      tel,\r\n      nickname,\r\n      admin,\r\n    };\r\n\r\n    if(type === 'register'){\r\n      dispatch(registerUser(body, admin)).then(data => {\r\n        history.push('/');\r\n      })\r\n    }\r\n    if(type === 'login'){\r\n      dispatch(loginUser(body));\r\n      dispatch(auth());\r\n    }\r\n  }\r\n\r\n  function KakaoLogin() {\r\n    axios.defaults.xsrfCookieName = \"csrftoken\"\r\n    axios.defaults.xsrfHeaderName = \"X-CSRFToken\"\r\n\r\n    const redirectUri = admin ?\r\n              `${domain.default}api/auth/oauth/kakao/1`:\r\n              `${domain.default}api/auth/oauth/kakao`\r\n\r\n\r\n    console.log(Kakao.Auth.authorize({\r\n      redirectUri,\r\n      scope: 'profile, gender'\r\n    }))\r\n\r\n    dispatch(auth())\r\n  }\r\n\r\n  return (\r\n    <AuthFormBlock>\r\n      <h3>{text}</h3>\r\n      <div align=\"right\" width=\"100%\">\r\n        <p>관리자 {text}</p>\r\n        <ToggleButton\r\n          inactiveLabel = {'OFF'}\r\n          activeLabel = {'ON'}\r\n          value={admin}\r\n          onToggle={onAdminToggle}/>\r\n      </div>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <StyledInput\r\n          placeholder=\"이메일\"\r\n          type=\"email\"\r\n          value={Email}\r\n          onChange={onEmailChange}\r\n        /> \r\n        {type === \"register\" && <input type=\"button\" onClick={isExistUserCheck} value=\"중복체크\"/>}\r\n        <br />\r\n        <StyledInput\r\n          placeholder=\"비밀번호\"\r\n          type=\"password\"\r\n          value={Password}\r\n          onChange={onPasswordChange}\r\n        />\r\n        <br />\r\n        {type === \"register\" && <>\r\n          <StyledInput placeholder=\"전화번호\" type=\"text\" value={tel} onChange={onTelChange} />\r\n          <StyledInput placeholder=\"닉네임\" type=\"text\" value={nickname} onChange={onNicknameChange}/>\r\n          </>}\r\n        <Button\r\n          cyan\r\n          fullWidth\r\n          style={{ marginTop: \"1rem\" }}\r\n          type=\"submit\"\r\n        >\r\n          {text}\r\n        </Button>\r\n        {\r\n          type === \"login\" &&\r\n          <Button\r\n            yellow\r\n            fullWidth\r\n            style={{ marginTop: \"1rem\" }}\r\n            type=\"button\"\r\n            onClick={KakaoLogin}\r\n          >\r\n            카카오 로그인\r\n        </Button>\r\n        }\r\n\r\n        <div className={('login')}>\r\n\r\n        </div>\r\n      </form>\r\n      <Footer>\r\n        {type === \"login\" ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n            <Link to=\"/login\">로그인</Link>\r\n          )}\r\n      </Footer>\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default withRouter(AuthForm);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Button from '../components/common/Button';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport AuthForm from '../components/auth/AuthForm';\r\nimport { auth, logout } from '../_actions/user_actions';\r\n\r\nconst MyPage = (props) => {\r\n    const { account } = useSelector(state => {\r\n        return state.user;\r\n    })\r\n    const dispatch = useDispatch()\r\n\r\n    /* 해당 페이지가 처음 실행되었을때 실행되는 함수 */\r\n    useEffect(() => {\r\n        dispatch(auth());\r\n    }, [dispatch])\r\n\r\n    const loggedout = () => {\r\n        dispatch(logout());\r\n    }\r\n\r\n\r\n    return (\r\n        <AuthTemplate>\r\n            {\r\n                !account ?\r\n                    <><AuthForm type=\"login\" /></> :\r\n                    <>\r\n                        <Button cyan style={{ marginTop: '1rem' }}>\r\n                            <Link to=\"/MyResvPage\">나의 예약 현황</Link>\r\n                        </Button><br />\r\n                        <Button cyan style={{ marginTop: '1rem' }}>\r\n                            <Link to=\"/PreResvPage\">이전 예약 목록</Link>\r\n                        </Button><br />\r\n                        <Button cyan style={{ marginTop: '1rem' }}>\r\n                            <Link to=\"/ProfilePage\">프로필 수정</Link>\r\n                        </Button><br />\r\n                        <Button cyan style={{ marginTop: '1rem' }} onClick={loggedout}>로그아웃</Button>\r\n                    </>\r\n            }\r\n        </AuthTemplate>\r\n    )\r\n}\r\n\r\nexport default MyPage;","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledBox = styled.input`\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 0.25rem;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border: 1px solid ${palette.gray[5]};\r\n  height: 2.25rem;\r\n  width: 12rem;\r\n  margin-bottom: 1rem;\r\n  margin-right: 1rem;\r\n\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      width: 100%;\r\n      font-size: 1rem;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.short &&\r\n    css`\r\n      width: 40%;\r\n      font-size: 1rem;\r\n    `}\r\n\r\n      ${(props) =>\r\n    props.high &&\r\n    css`\r\n      height: auto;\r\n    `}\r\n`;\r\n\r\nconst Input = (props) => <StyledBox {...props} />;\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyleBlock = styled.div`\r\n  position: relative;\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 0.25rem;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  line-height: 1.5;\r\n  border: 1px solid ${palette.gray[5]};\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  margin-right: 1rem;\r\n  ${(props) =>\r\n    props.right &&\r\n    css`\r\n      text-align: right;\r\n    `}\r\n    ${(props) =>\r\n    props.short &&\r\n    css`\r\n      width: 40%;\r\n    `}\r\n`;\r\n\r\nconst MenuBlock = (props) => <StyleBlock {...props} />;\r\n\r\nexport default MenuBlock;\r\n","import client from '../lib/client'\r\nimport {\r\n    STORE_ADD,\r\n    STORE_INFO,\r\n    STORE_SEARCH,\r\n    STORE_LIMIT_SEARCH,\r\n    STORE_UPDATE\r\n} from './types.js'\r\nimport * as domain from '../lib/server'\r\n\r\n//홈에 가게조회\r\nexport function mainPageStoreList(dataToSubmit){\r\n    const req = client.get(`${domain.default}api/store/home`)\r\n        .then(res => res)\r\n\r\n    return {\r\n        type: STORE_LIMIT_SEARCH,\r\n        payload: req\r\n    }\r\n}\r\n\r\nexport function storeSearch(keyword) {\r\n    const req = client.get(`${domain.default}api/store/search?main=${keyword.main}&detail=${keyword.detail}`)\r\n                .then(res => res)\r\n\r\n    return {\r\n        type: STORE_SEARCH,\r\n        payload: req\r\n    }\r\n}\r\n\r\n//가게 내용 조회\r\nexport function storeInfo(storeid) {\r\n    const req = client.get(`${domain.default}api/store/${storeid}`).then(res => res)\r\n\r\n    return {\r\n        type: STORE_INFO,\r\n        payload: req,\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Button from \"../components/common/Button\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomRadioButton } from \"../components/common/CustomRadioButton\"\r\nimport Input from '../components/common/Input'\r\nimport MenuBlock from '../components/common/MenuBlock'\r\nimport * as storeAction from '../_actions/store_actions'\r\nimport * as domain from '../lib/server'\r\n\r\n\r\n\r\nconst SearchPage = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectCategories, setSelectCategories] = useState(\"한식\")\r\n  const [selectIndex, setSelectIndex] = useState(0);\r\n  const dispatch = useDispatch()\r\n\r\n  const { arrayStoreList } = useSelector(state => state.store)\r\n\r\n  function onSearchChange(e) {\r\n    setSearch(e.currentTarget.value);\r\n  }\r\n\r\n  function onSelectChange(e) {\r\n    const selection = parseInt(e.currentTarget.value)\r\n    const categoriesList = [\"한식\", \"중식\", \"일식\", \"양식\"]\r\n    setSelectIndex(selection)\r\n    setSelectCategories(categoriesList[selection])\r\n  }\r\n\r\n  function getStoreList() {\r\n    const keyword = {\r\n      main: search, \r\n      detail: selectCategories\r\n    }\r\n    dispatch(storeAction.storeSearch(keyword));\r\n  }\r\n\r\n  return (\r\n    <AuthTemplate relative={true}>\r\n      <Input placeholder=\"검색\" \r\n      type=\"text\"\r\n      value={search}\r\n      onChange={onSearchChange}\r\n      />\r\n      <Button cyan style={{ marginTop: \"1rem\" }}  onClick={getStoreList}>\r\n        검색\r\n      </Button>\r\n      <br />\r\n\r\n      <div>\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={0} \r\n              checked={selectIndex === 0}\r\n              onChange={onSelectChange}/> 한식\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={1}\r\n              checked={selectIndex === 1}\r\n              onChange={onSelectChange}/> 중식\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={2} \r\n              checked={selectIndex === 2}\r\n              onChange={onSelectChange}/> 일식\r\n        <input type=\"radio\" \r\n              name=\"categories\" \r\n              value={3} \r\n              checked={selectIndex === 3}\r\n              onChange={onSelectChange}/> 양식\r\n      </div>\r\n\r\n      {arrayStoreList &&\r\n          arrayStoreList.length > 0 &&\r\n        <MenuBlock bold>\r\n          <table>\r\n          {\r\n            arrayStoreList.map(data => (\r\n              <tr>\r\n                <td>\r\n                <Link to={`/StorePage/${data.storeid}`}>\r\n                <img src={`${domain.default}${data.store_img}`} alt={`${data.name}`} key={data.storeid}/><br/>\r\n              </Link>\r\n                </td>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n            ))\r\n          }\r\n          </table>\r\n        </MenuBlock>\r\n      }\r\n      \r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport AuthForm from '../components/auth/AuthForm';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <AuthForm type=\"login\" />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport AuthForm from '../components/auth/AuthForm';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <AuthForm type=\"register\"/>\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport Button from \"../components/common/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuBlock from '../components/common/MenuBlock'\r\nimport * as resAction from '../_actions/reserve_actions'\r\nimport * as userAction from '../_actions/user_actions'\r\nimport * as domain from '../lib/server'\r\n\r\n\r\n\r\nconst MyResvPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { viewReserveData } = useSelector(state => state.reserve)\r\n\r\n  useEffect(() => {\r\n    dispatch(userAction.auth());\r\n    dispatch(resAction.listReserve());\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <AuthTemplate>\r\n      나의 예약 현황\r\n      <br />\r\n      <br />\r\n      <MenuBlock>\r\n        {viewReserveData &&\r\n          viewReserveData.length > 0 &&\r\n          viewReserveData.map(data => (\r\n            <>\r\n              <p>{data.reservedate} {data.reservetime/10000}시<br/>\r\n              {data.name}\r\n                <Button right>\r\n                  <Link to={`/ReviewPage${data.reserveid}`}>리뷰 작성</Link>\r\n                </Button>\r\n              </p>\r\n            </>\r\n          ))\r\n        }\r\n      </MenuBlock>\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default MyResvPage;\r\n","import client from '../lib/client'\r\nimport {\r\n    RESERVE_ADD,\r\n    RESERVE_INDEX,\r\n    RESERVE_DELETE,\r\n    PRE_RESERVE_DATA,\r\n    RESERVE_DATA\r\n} from './types.js'\r\nimport * as domain from '../lib/server'\r\n\r\n\r\n//예약하기\r\nexport function doReserve({imp_uid, merchant_uid, name, amount, buyer_name, buyer_tel, storeid, reservedate, prepay, peoples, reservetime}){\r\n    const send_data = {\r\n        imp_uid, merchant_uid, name, amount, buyer_name, buyer_tel,\r\n        storeid, reservedate, prepay, peoples, reservetime\r\n    }\r\n    const req = client.post(`${domain.default}api/customers/reserve/${storeid}`, send_data)\r\n        .then(res => res);\r\n\r\n    return {\r\n        type: RESERVE_ADD,\r\n        payload: req\r\n    }\r\n}\r\n\r\n//예약 조회(하나만)\r\nexport function indexReserve(reserveid){\r\n    //console.log(reserveid);\r\n    const req = client.get(`${domain.default}api/customers/reserve/find/${reserveid}`)\r\n                .then(res => res);\r\n\r\n    return {\r\n        type: RESERVE_INDEX,\r\n        payload: req\r\n    }\r\n}\r\n\r\nexport function listReserve() {\r\n    const req = client.get(`${domain.default}api/customers/reserve/`)\r\n                    .then(res => res);\r\n    return {\r\n        type: RESERVE_DATA,\r\n        payload: req\r\n    }\r\n}\r\n\r\nexport function listOldReserve(){\r\n    const req = client.get(`${domain.default}api/customers/old/reserve`)\r\n        .then(res => res);\r\n\r\n    return {\r\n        type: PRE_RESERVE_DATA,\r\n        payload: req\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport Button from \"../components/common/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuBlock from '../components/common/MenuBlock'\r\nimport * as resAction from '../_actions/reserve_actions'\r\nimport * as userAction from '../_actions/user_actions'\r\n\r\nconst PreResvPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { viewPreReserveData } = useSelector(state => state.reserve)\r\n\r\n  useEffect(() => {\r\n    dispatch(userAction.auth());\r\n    dispatch(resAction.listOldReserve());\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <AuthTemplate>\r\n      이전 예약 목록\r\n      <br />\r\n      <br />\r\n\r\n      <MenuBlock>\r\n        {viewPreReserveData &&\r\n          viewPreReserveData.length > 0 &&\r\n          viewPreReserveData.map(data => (\r\n            <>\r\n              <p>{data.reservedate} {data.reservetime/10000}시<br/>\r\n              {data.name}\r\n                <Button right>\r\n                  <Link to={`/ReviewPage${data.reserveid}`}>리뷰 작성</Link>\r\n                </Button>\r\n              </p>\r\n            </>\r\n          ))\r\n        }\r\n      </MenuBlock>\r\n\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default PreResvPage;\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport Button from \"../components/common/Button\";\r\nimport MenuBlock from \"../components/common/MenuBlock\"\r\nimport Input from '../components/common/Input'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProfilePage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <h3>프로필수정</h3>\r\n      <MenuBlock>MyId</MenuBlock>\r\n      <Input fullWidth placeholder=\"현재비밀번호\"></Input>\r\n      <Input fullWidth placeholder=\"새비밀번호\"></Input>\r\n      <Input fullWidth placeholder=\"비밀번호재입력\"></Input>\r\n      <Input fullWidth placeholder=\"전화번호 ['-'는 제외하고 입력]\"></Input>\r\n      <Input fullWidth placeholder=\"닉네임\"></Input>\r\n      <Button fullWidth cyan>\r\n        <Link to=\"/MyPage\">프로필 수정</Link>\r\n      </Button>\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport Button from \"../components/common/Button\";\r\n\r\n\r\n\r\nconst OwnerPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      관리자 페이지\r\n      <br />\r\n      <br />\r\n      <div>\r\n        <Button white fullWidth>\r\n            <Link to=\"/ModStorePage\">봉피양</Link>\r\n          </Button>\r\n      </div>\r\n      <br/>\r\n      <br/>\r\n      <div>\r\n      <Button round right>\r\n        <Link to=\"/AddStorePage\">+</Link>\r\n      </Button>\r\n      </div>\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default OwnerPage;\r\n","import React from 'react';\r\nimport styled, { css } from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\n\r\nconst StyledImg = styled.img`\r\n  float: center;\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 0.25rem;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border: 1px solid ${palette.gray[5]};\r\n  height: 5.5rem;\r\n  width: 7rem;\r\n  margin-right: 1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst ImgDiv = () => <StyledImg/>\r\n\r\nexport default ImgDiv;\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport Input from '../components/common/Input'\r\nimport Button from \"../components/common/Button\";\r\nimport MenuBlock from \"../components/common/MenuBlock\"\r\nimport ImgDiv from \"../components/common/ImgDiv\"\r\n\r\n\r\n\r\nconst AddStorePage = () => {\r\n  return (\r\n    <AuthTemplate relative>\r\n        <h3>가게추가</h3>\r\n        <Input fullWidth placeholder=\"사업자등록번호\"></Input>\r\n        <Input fullWidth placeholder=\"상호명\"></Input>\r\n        <Input fullWidth placeholder=\"주소\"></Input>\r\n        <Input fullWidth placeholder=\"전화번호\"></Input>\r\n        <Input short placeholder=\"휴식시간\"></Input>~<Input short placeholder=\"휴식시간\"></Input>\r\n        <Input short placeholder=\"휴일\"></Input>~<Input short placeholder=\"휴일\"></Input>\r\n        <Input fullWidth placeholder=\"가게설명\"></Input>\r\n        <Input fullWidth placeholder=\"선수금\"></Input>\r\n        <div style={{overflow:\"hidden\"}}>\r\n        <MenuBlock short bold style={{float:\"left\"}}>메뉴</MenuBlock>\r\n        <Button round style={{float:\"left\"}}>+</Button>\r\n        <Button round style={{float:\"left\"}}>-</Button>\r\n        </div>\r\n        <MenuBlock>\r\n        <ImgDiv></ImgDiv><p>메뉴명</p><p>가격</p>\r\n        <h5>메뉴설명</h5>\r\n        <MenuBlock>주저리주저리</MenuBlock>\r\n        </MenuBlock>\r\n        <br/>\r\n        <Button fullWidth cyan>가게 추가</Button>\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default AddStorePage;\r\n\r\n//pages/AddStorePage.js [가게에 들어갈내용 + 메뉴넣는기능 만들기 (+를 누르면 추가적으로 메뉴작성할 수 있고 -를 누르면 목록 삭제)]","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport Button from \"../components/common/Button\";\r\nimport MenuBlock from \"../components/common/MenuBlock\"\r\nimport ImgDiv from \"../components/common/ImgDiv\"\r\nimport Input from '../components/common/Input'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ReviewPage = () => {\r\n  return (\r\n    <AuthTemplate relative>\r\n      <MenuBlock>\r\n      <h3>리뷰 작성</h3>\r\n      <Input fullWidth placeholder=\"리뷰 제목\"></Input>\r\n      <ImgDiv></ImgDiv>\r\n      <Input fullWidth placeholder=\"작성자\"></Input>\r\n      <Input fullWidth placeholder=\"작성 날짜\"></Input>\r\n      <Input fullWidth placeholder=\"작성자\"></Input>\r\n      <MenuBlock>너무 매워서 정신 나갈 것 같아 정신 나갈 것 같아 점심 나가서 먹을 것 같아</MenuBlock>\r\n      </MenuBlock>\r\n      <Button fullWidth cyan>\r\n        <Link to=\"/PreResvPage\">리뷰 작성</Link>\r\n      </Button>\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default ReviewPage;\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport AuthForm from '../components/auth/AuthForm';\r\n\r\nconst CancelPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      예약 취소\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default CancelPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as userAction from '../_actions/user_actions'\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport Button from '../components/common/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport Carousel from 'react-elastic-carousel'\r\nimport * as storeAction from '../_actions/store_actions'\r\nimport * as domain from '../lib/server'\r\n\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { account } = useSelector(state => state.user)\r\n  const { homeArrayStoreList } = useSelector(state => {\r\n    //console.log(state.store)\r\n    return state.store;\r\n  })\r\n\r\n  useEffect(() => {\r\n    dispatch(userAction.auth())\r\n    dispatch(storeAction.mainPageStoreList())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <AuthTemplate>\r\n        <Carousel itemsToShow={1}>\r\n          {\r\n            homeArrayStoreList ? \r\n              homeArrayStoreList.store.map(data => \r\n                <Link to={`/StorePage/${data.storeid}`}>\r\n                  <img src={`${domain.default}` + data.store_img} \r\n                        alt={data.storeid} \r\n                        key={data.storeid}\r\n                        width=\"128px\"/>\r\n                </Link>\r\n              ) :\r\n            <img src={`${domain.default}images/ml-untitle.png` }\r\n                    alt=''/>\r\n          }\r\n        </Carousel>\r\n      \r\n    \r\n      <div>\r\n        {account && account.admin ?\r\n          <Button right>\r\n            <Link to=\"/OwnerPage\">관리자페이지</Link>\r\n            {/* 관리자 아이디 로그인시만 보여야함 */}\r\n          </Button> : ''\r\n        }\r\n      </div>\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Button from \"../common/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * 관리자 가게 추가 및 가게 정보 수정\r\n */\r\n\r\nconst AuthStoreFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${palette.gray[8]};\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\n/**\r\n * 스타일링된 input\r\n */\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${palette.gray[5]};\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  width: 100%;\r\n  &:focus {\r\n    color: $oc-teal-7;\r\n    border-bottom: 1px solid ${palette.gray[7]};\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\n/**\r\n * 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\r\n */\r\nconst Footer = styled.div`\r\n  margin-top: 2rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${palette.gray[6]};\r\n    text-decoration: underline;\r\n    &:hover {\r\n      color: ${palette.gray[9]};\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst textMap = {\r\n  login: \"로그인\",\r\n  register: \"회원가입\",\r\n};\r\n\r\n/**\r\n * 에러를 보여줍니다\r\n */\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  text-align: center;\r\n  font-size: 0.875rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthStoreForm = ({ props, type }) => {\r\n  const text = textMap[type];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n\r\n  function onEmailChange(e) {\r\n    setEmail(e.currentTarget.value);\r\n  }\r\n\r\n  function onPasswordChange(e) {\r\n    setPassword(e.currentTarget.value);\r\n  }\r\n\r\n  async function loginUser(body) {\r\n    const result = await axios.post(\"/api/auth/login\", body);\r\n\r\n    console.log(result);\r\n\r\n    return result;\r\n  }\r\n\r\n  function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n    const body = {\r\n      email: Email,\r\n      password: Password,\r\n      admin: false,\r\n    };\r\n\r\n    loginUser(body);\r\n  }\r\n\r\n  return (\r\n    <AuthStoreFormBlock>\r\n      <h3>{text}</h3>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <StyledInput\r\n          placeholder=\"아이디\"\r\n          type=\"email\"\r\n          value={Email}\r\n          onChange={onEmailChange}\r\n        />\r\n        <br />\r\n        <StyledInput\r\n          placeholder=\"비밀번호\"\r\n          type=\"password\"\r\n          value={Password}\r\n          onChange={onPasswordChange}\r\n        />\r\n        <br />\r\n        {type === \"register\" && <StyledInput placeholder=\"전화번호\" />}\r\n        <Button\r\n          cyan\r\n          fullWidth\r\n          style={{ marginTop: \"1rem\" }}\r\n          type=\"submit\"\r\n        >\r\n          {text}\r\n        </Button>\r\n      </form>\r\n      <Footer>\r\n        {type === \"login\" ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </Footer>\r\n    </AuthStoreFormBlock>\r\n  );\r\n};\r\n\r\n// const AuthStoreForm = ({ type, form, onChange, onSubmit, error }) => {\r\n//   const text = textMap[type];\r\n//   return (\r\n//     <AuthStoreFormBlock>\r\n//       <h3>{text}</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//         <StyledInput\r\n//           autoComplete=\"username\"\r\n//           name=\"username\"\r\n//           placeholder=\"아이디\"\r\n//           onChange={onChange}\r\n//           value={form.username}\r\n//         />\r\n//         <StyledInput\r\n//           autoComplete=\"new-password\"\r\n//           name=\"password\"\r\n//           placeholder=\"비밀번호\"\r\n//           type=\"password\"\r\n//           onChange={onChange}\r\n//           value={form.password}\r\n//         />\r\n//         {type === 'register' && (\r\n//           <StyledInput\r\n//             autoComplete=\"new-password\"\r\n//             name=\"passwordConfirm\"\r\n//             placeholder=\"비밀번호 확인\"\r\n//             type=\"password\"\r\n//             onChange={onChange}\r\n//             value={form.passwordConfirm}\r\n//           />\r\n//         )}\r\n//         {error && <ErrorMessage>{error}</ErrorMessage>}\r\n//         <Button cyan fullWidth style={{ marginTop: '1rem' }}>\r\n//           {text}\r\n//         </Button>\r\n//       </form>\r\n//       <Footer>\r\n//         {type === 'login' ? (\r\n//           <Link to=\"/register\">회원가입</Link>\r\n//         ) : (\r\n//           <Link to=\"/login\">로그인</Link>\r\n//         )}\r\n//       </Footer>\r\n//     </AuthStoreFormBlock>\r\n//   );\r\n// };\r\n\r\nexport default AuthStoreForm;\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport AuthStoreForm from '../components/auth/AuthStoreForm';\r\n\r\nconst ModStorePage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      {/* 가게 추가 + 가게 정보 수정 합쳐서 Form으로 제작할 예정 */}\r\n      <AuthStoreForm type=\"register\" />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default ModStorePage;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport Button from '../common/Button'\r\n\r\nfunction Modal({\r\n  className,\r\n  onClose,\r\n  maskClosable,\r\n  closable,\r\n  visible,\r\n  children,\r\n}) {\r\n  const onMaskClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose(e)\r\n    }\r\n  }\r\n\r\n  const close = (e) => {\r\n    if (onClose) {\r\n      onClose(e)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <ModalOverlay visible={visible} />\r\n      <ModalWrapper\r\n        className={className}\r\n        onClick={maskClosable ? onMaskClick : null}\r\n        tabIndex=\"-1\"\r\n        visible={visible}\r\n      >\r\n        <ModalInner tabIndex=\"0\" className=\"modal-inner\">\r\n          {closable && <Button vertex className=\"modal-close\" onClick={close} >닫기</Button>}\r\n          {children}\r\n        </ModalInner>\r\n      </ModalWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  visible: PropTypes.bool,\r\n}\r\n\r\nconst ModalWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  overflow: auto;\r\n  outline: 0;\r\n`\r\n\r\nconst ModalOverlay = styled.div`\r\n  box-sizing: border-box;\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  z-index: 999;\r\n`\r\n\r\nconst ModalInner = styled.div`\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  width: 360px;\r\n  max-width: 480px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n`\r\n\r\nexport default Modal","import styled from 'styled-components'\r\n\r\nconst ContainRadioButtonDiv = styled.div`\r\n  width: 100%;\r\n\r\n  input[type=\"radio\"] {\r\n    display: flex;\r\n  }\r\n\r\n  input[type=\"radio\"] + label {\r\n    display: block;\r\n    background: #00498c;\r\n    border: 1px solid #dfdfdf;\r\n    padding: 0px 10px;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    color: #fff;\r\n  }\r\n\r\n  input[type=\"radio\"]:checked + label {\r\n    border: 1px solid #23a3a7;\r\n    background: #23a3a7;\r\n    color: #fff;\r\n  }\r\n`\r\n\r\nexport default ContainRadioButtonDiv","import React, { useState, useEffect } from \"react\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled, { css } from \"styled-components\";\r\nimport palette from \"../lib/styles/palette\";\r\nimport AuthForm from \"../components/auth/AuthForm\";\r\nimport Button from \"../components/common/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from '../components/modal/Modal'\r\nimport * as storeAction from '../_actions/store_actions'\r\nimport * as reviewAction from '../_actions/review_action'\r\nimport * as format from '../lib/dateFormat'\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport RadioButton from '../components/common/radioButton'\r\nimport * as domain from '../lib/server'\r\n\r\n\r\n\r\nconst ImgDiv = styled.img`\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 0.25rem;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border: 1px solid ${palette.gray[5]};\r\n  width: 50%;\r\n  margin-right: 0.5rem;\r\n  &:{\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst MenuBlock = styled.div`\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 0.25rem;\r\n  font-size: ${({ font_size }) => font_size}rem;\r\n  line-height: 1.5;\r\n  border: 1px solid ${palette.gray[5]};\r\n  width: 100%;\r\n  margin-right: 1rem;\r\n  ${(props) =>\r\n    props.bold &&\r\n    css`\r\n      font-weight: bold;\r\n    `}\r\n  ${(props) =>\r\n    props.right &&\r\n    css`\r\n      text-align: right;\r\n    `}\r\n`;\r\n\r\n\r\n\r\n\r\nconst StorePage = (props) => {\r\n\r\n  const { storeid } = props.match.params;\r\n\r\n  const dispatch = useDispatch();\r\n  const { findStoreInfo } = useSelector(state => state.store);\r\n  const { indexReview } = useSelector(state => state.review);\r\n\r\n  const [resDateIndex, setResDateIndex] = useState(0)\r\n  const [radioIndex, setRadioIndex] = useState(0)\r\n\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const openModal = () => {\r\n    setModalVisible(true)\r\n  }\r\n  const closeModal = () => {\r\n    setModalVisible(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(storeAction.storeInfo(storeid))\r\n    dispatch(reviewAction.reviewIndexer(storeid))\r\n  }, [dispatch, storeid])\r\n\r\n  const carouselOnChangeHandler = (curItem, curPageIndex) => {\r\n    setResDateIndex(curPageIndex);\r\n  }\r\n\r\n  const radioCheckHandler = (e) => {\r\n    setRadioIndex(e.target.defaultValue)\r\n  }\r\n\r\n  return (<>\r\n    {findStoreInfo ?\r\n      <AuthTemplate relative>\r\n        <h3 align=\"center\">{findStoreInfo.store.name}</h3>\r\n        <h4 align=\"center\">{findStoreInfo.store.address}</h4>\r\n        <div align=\"center\">\r\n          <ImgDiv src={domain.default + findStoreInfo.store.store_img}\r\n            alt=\"\" />\r\n        </div>\r\n        <br />\r\n        <div align=\"right\"> 별점 평균 : \r\n        {indexReview && indexReview.star.length > 0 &&\r\n            <span> {indexReview.star[indexReview.star.length - 1].average}</span>}\r\n        </div>\r\n        <div align=\"right\">\r\n          {indexReview &&\r\n            indexReview.star.length > 0 &&\r\n            [...Array(5)].map((n, index) =>\r\n              indexReview.star[indexReview.star.length - 1].average > index + 1 ?\r\n                <>★</> : <>☆</>\r\n            )\r\n          }\r\n        </div>\r\n        <br />\r\n\r\n        <h4 align=\"center\"> 메뉴 </h4>\r\n        <Carousel itemToShow={1}>\r\n          {findStoreInfo.menu &&\r\n            findStoreInfo.menu.length > 0 ?\r\n            findStoreInfo.menu.map(data =>\r\n              <MenuBlock right bold>\r\n                <div>\r\n                  <ImgDiv src={`${domain.default}images/ml-untitle.png`} width='64px' alt='' />\r\n                  <br /><p>{data.name}</p><p>{data.price}</p>\r\n                </div>\r\n              </MenuBlock>\r\n            ) : <MenuBlock center bold>준비중입니다.</MenuBlock>\r\n          }\r\n        </Carousel>\r\n\r\n        <h4 align=\"center\"> 리뷰 </h4>\r\n        {indexReview &&\r\n          indexReview.review && indexReview.review.length > 0 ?\r\n          indexReview.review.map(review =>\r\n            <MenuBlock key={review.reviewid}>\r\n              <h3>{review.title}</h3>\r\n              <ImgDiv src={`${domain.default}images/ml-untitle.png`} />\r\n              <h5>작성자: {review.writer}</h5>\r\n              <hr />\r\n              <p>{review.content}</p>\r\n              <p>별점 {review.score} {[...Array(5)].map((n, index) =>\r\n                review.score > index ? <>★</> : <>☆</>\r\n              )}</p>\r\n            </MenuBlock>\r\n          ) : <MenuBlock font_size=\"0.8\"> 리뷰가 없습니다.😂<br /> 해당 가게의 첫번째 리뷰어가 되어볼까요?</MenuBlock>\r\n        }\r\n        <Button cyan fullWidth style={{ marginTop: \"1rem\" }} onClick={openModal}>\r\n          예약하기\r\n      </Button>\r\n        {\r\n          modalVisible && (\r\n            <Modal\r\n              visible={modalVisible}\r\n              closable={true}\r\n              maskClosable={true}\r\n              onClose={closeModal}\r\n            >\r\n              <div>\r\n                <Carousel itemToShow={1} onChange={carouselOnChangeHandler}>\r\n                  {[...Array(7)].map((n, index) => \r\n                      <p>{new Date(Date.now() + (index * 86400 * 1000)).format('MM월 dd일')}</p>\r\n                  )}\r\n                </Carousel>\r\n              </div>\r\n              <MenuBlock>\r\n                <RadioButton>\r\n                  {[...Array(5)].map((n, index) =>\r\n                  <div key={index}>\r\n                    {resDateIndex === 0 && \r\n                        parseInt(new Date().format('HH')) + 1 >= (index * 2) + 12 ?\r\n                       <> <input type=\"radio\" disabled onChange={radioCheckHandler} id={index} name=\"timezone\" value={index}/>\r\n                       <label htmlFor={index}>해당시간대는 선택하실 수 없습니다</label> </> :\r\n                       <> <input type=\"radio\" onChange={radioCheckHandler} id={index} name=\"timezone\" value={index}/>\r\n                       <label htmlFor={index}>{(index * 2) + 12}:00 ~ {(index * 2) + 14}:00</label> </>\r\n\r\n                    }\r\n                    \r\n                  </div>\r\n                  )}\r\n                </RadioButton>\r\n              </MenuBlock>\r\n              <Button fullWidth><Link to={`/ReservePage/${storeid}/${(radioIndex * 2) + 12}/${resDateIndex}`}>예약하기</Link></Button>\r\n            </Modal>\r\n          )}\r\n      </AuthTemplate> :\r\n      ''\r\n    }\r\n  </>\r\n  );\r\n};\r\n\r\nexport default StorePage;\r\n","import client from '../lib/client'\r\nimport {\r\n    REVIEW_ADD,\r\n    REVIEW_INDEX\r\n} from './types.js'\r\nimport * as domain from '../lib/server'\r\n\r\n//리뷰 조회\r\nexport function reviewIndexer(storeid){\r\n    const req = client.get(`${domain.default}api/store/${storeid}/review`)\r\n        .then(res => res);\r\n\r\n    return {\r\n        type: REVIEW_INDEX,\r\n        payload: req\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport Button from \"../components/common/Button\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Moment from 'react-moment'\r\nimport MenuBlock from '../components/common/MenuBlock'\r\nimport Iamport from 'react-iamport'\r\nimport * as storeAction from '../_actions/store_actions'\r\nimport * as userAction from '../_actions/user_actions'\r\nimport * as resAction from '../_actions/reserve_actions'\r\nimport * as format from '../lib/dateFormat'\r\n\r\n\r\nconst ReservePage = (props) => {\r\n\r\n  const { storeid, date, time } = props.match.params;\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(storeid, date, time)\r\n\r\n  const { findStoreInfo } = useSelector(state => state.store);\r\n  const { account } = useSelector(state => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(userAction.auth())\r\n    dispatch(storeAction.storeInfo(storeid))\r\n  }, [dispatch, storeid])\r\n\r\n  return (\r\n    <>\r\n      {console.log(account)}\r\n      {\r\n\r\n        account &&\r\n        account.account &&\r\n        findStoreInfo &&\r\n        findStoreInfo.store &&\r\n        <AuthTemplate relative>\r\n          <h3>예약확인</h3>\r\n          <MenuBlock right>\r\n            <table>\r\n              <tr>\r\n                <td>가게명</td>\r\n                <td><p>{findStoreInfo.store.name}</p></td>\r\n              </tr>\r\n              <tr>\r\n                <td>예약일시</td>\r\n                <td><p>{new Date(Date.now() + (date * 86400 * 1000)).format('MM월 dd일')}</p></td>\r\n              </tr>\r\n              <tr>\r\n                <td>이용시간</td>\r\n                <td><p>{time}:00 ~ {parseInt(time) + 2}:00</p></td>\r\n              </tr>\r\n              <tr>\r\n                <td>예약자명</td>\r\n                <td><p>{account.account.nickname}</p></td>\r\n              </tr>\r\n              <tr>\r\n                <td>결제 금액</td>\r\n                <td><p>{findStoreInfo.store.prepay}</p></td>\r\n              </tr>\r\n            </table>\r\n\r\n          </MenuBlock>\r\n          <Iamport\r\n            identificationCode=\"imp94333879\"\r\n            params={{\r\n              pg: \"html5_inicis\",\r\n              pay_method: \"card\",\r\n              merchant_uid: `MILLP${storeid}-${new Date().getTime()}`,\r\n              name: `${findStoreInfo.store.name}`,\r\n              amount: findStoreInfo.store.prepay,\r\n              buyer_email: `${!account.account || '' ? '' : account.account.email}`,\r\n              buyer_tel: `${!account.account || '' ? '' : account.account.tel}`,\r\n              buyer_name: `${account.account.nickname}`,\r\n            }}\r\n            onFailed={err => {\r\n              props.history.push(`/StorePage/${storeid}`)\r\n            }}\r\n            onSuccess={res => {\r\n              const resData = {\r\n                imp_uid: res.imp_uid,\r\n                merchant_uid: res.merchant_uid,\r\n                name: res.name,\r\n                amount: res.amount,\r\n                buyer_name: res.buyer_name,\r\n                buyer_tel: res.buyer_tel,\r\n                storeid: storeid,\r\n                reservedate: new Date(Date.now() + (date * 86400 * 1000)).format('yyyyMMdd'),\r\n                prepay: res.amount,\r\n                peoples: 1,\r\n                reservetime: time * 10000\r\n              }\r\n              dispatch(resAction.doReserve(resData)).then((data) => {\r\n                props.history.push(`/CompletePage/${data.payload.data.insert_reserve}`)\r\n              })\r\n            }}\r\n\r\n            render={(renderProps) =>\r\n              <Button fullWidth onClick={renderProps.onClick}>예약하기</Button>}\r\n          />\r\n        </AuthTemplate>\r\n      }\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default withRouter(ReservePage);\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport styled, { css } from \"styled-components\";\r\nimport palette from \"../lib/styles/palette\";\r\nimport Button from \"../components/common/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as resAction from '../_actions/reserve_actions'\r\n\r\nconst MenuBlock = styled.div`\r\n  padding: 0.5rem 0.75rem;\r\n  border-radius: 0.25rem;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  border: 1px solid ${palette.gray[5]};\r\n  width: 100%;\r\n  margin-right: 1rem;\r\n  ${(props) =>\r\n    props.bold &&\r\n    css`\r\n      font-weight: bold;\r\n    `}\r\n  ${(props) =>\r\n    props.right &&\r\n    css`\r\n      text-align: right;\r\n    `}\r\n`;\r\n\r\n\r\nconst CompletePage = (props) => {\r\n\r\n  const { reserveid } = props.match.params;\r\n  const { indexReserveData } = useSelector(state => state.reserve);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(resAction.indexReserve(reserveid))\r\n  }, [dispatch, reserveid])\r\n\r\n  return (\r\n    <>\r\n      {indexReserveData &&\r\n        <AuthTemplate relative>\r\n          <h3>예약확인</h3>\r\n          <MenuBlock bold right>\r\n            <table>\r\n              <tr>\r\n                <td>주문번호</td>\r\n                <td><p>{indexReserveData.ordercode}</p></td>\r\n              </tr>\r\n              <tr>\r\n                <td>가게명</td>\r\n                <td><p>{indexReserveData.name}</p></td>\r\n              </tr>\r\n              <tr>\r\n                <td>주소</td>\r\n                <td><p>{indexReserveData.address}</p></td>\r\n              </tr>\r\n              <tr>\r\n                <td>예약일시</td>\r\n                <td><p>{indexReserveData.reservedate}</p></td>\r\n              </tr>\r\n              <tr>\r\n                <td>이용시간</td>\r\n                <td><p>{indexReserveData.reservetime / 10000}:00 ~ {indexReserveData.reservetime / 10000 + 2}:00</p></td>\r\n              </tr>\r\n              <tr>\r\n                <td>예약자명</td>\r\n                <td><p>{!indexReserveData.c_nickname || '' ?\r\n                  indexReserveData.o_nickname :\r\n                  indexReserveData.c_nickname\r\n                }</p></td>\r\n              </tr>\r\n              <tr>\r\n                <td>선수금 결제 금액</td>\r\n                <td>{indexReserveData.prepay}원</td>\r\n              </tr>\r\n            </table>\r\n          </MenuBlock>\r\n          <Button cyan fullWidth>\r\n            <Link to=\"/\">홈으로</Link>\r\n          </Button>\r\n        </AuthTemplate>\r\n      }\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default CompletePage;","import React from 'react'\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport AuthTemplate from '../components/auth/AuthTemplate'\r\n\r\nfunction NotFoundPage() {\r\n    return (\r\n        <AuthTemplate>\r\n            404 Not Found\r\n        </AuthTemplate>\r\n    )\r\n}\r\n\r\nexport default withRouter(NotFoundPage)\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navigator from './components/common/Navigator';\r\nimport {Route, Switch, Link} from 'react-router-dom';\r\nimport MyPage from './pages/MyPage';\r\nimport SearchPage from './pages/SearchPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport MyResvPage from './pages/MyResvPage';\r\nimport PreResvPage from './pages/PreResvPage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport OwnerPage from './pages/OwnerPage';\r\nimport AddStorePage from \"./pages/AddStorePage\"\r\nimport ReviewPage from \"./pages/ReviewPage\"\r\nimport CancelPage from \"./pages/CancelPage\"\r\nimport HomePage from \"./pages/HomePage\"\r\nimport ModStorePage from \"./pages/ModStorePage\"\r\nimport StorePage from \"./pages/StorePage\"\r\nimport ReservePage from \"./pages/ReservePage\"\r\nimport CompletePage from \"./pages/CompletePage\"\r\nimport NotFoundPage from './pages/NotFoundPage'\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Route component={LoginPage} path=\"/login\"/>\r\n      <Route component={RegisterPage} path=\"/register\"/>\r\n      <Route component={MyResvPage} path=\"/MyResvPage\"/>\r\n      <Route component={PreResvPage} path=\"/PreResvPage\"/>\r\n      <Route component={ProfilePage} path=\"/ProfilePage\"/>\r\n      <Route component={OwnerPage} path=\"/OwnerPage\"/>\r\n      <Route component={AddStorePage} path=\"/AddStorePage\"/>\r\n      <Route component={ReviewPage} path=\"/ReviewPage\"/>\r\n      <Route component={CancelPage} path=\"/CancelPage\"/>\r\n      <Route component={ModStorePage} path=\"/ModStorePage\"/>\r\n      <Route component={StorePage} path={[\"/StorePage/:storeid\"]}/>\r\n      <Route component={ReservePage} path={[\"/ReservePage/:storeid/:time/:date\", \"/ReservePage/:storeid\"]}/>\r\n      <Route component={CompletePage} path=\"/CompletePage/:reserveid\"/>\r\n    \r\n      <Switch>\r\n        <Route component={HomePage} exact path=\"/\"/>\r\n        <Route component={MyPage} path=\"/MyPage\"/>\r\n        <Route component={SearchPage} path=\"/SearchPage\"/>\r\n      </Switch>\r\n      \r\n      <Navigator></Navigator>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    CHECK_USER\r\n} from '../_actions/types'\r\n\r\nconst initialState = {\r\n    error: null,\r\n    account: null\r\n}\r\n\r\nconst userAction = function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess: action.payload.data,\r\n                            status: action.payload.status }\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload.data,\r\n                status: action.payload.status}\r\n        case AUTH_USER:\r\n            return {...state, account: action.payload.data,\r\n                status: action.payload.status}\r\n        case LOGOUT_USER:\r\n            return {...state, account: null,\r\n                status: action.payload.status}\r\n        case CHECK_USER:\r\n            return {...state, checkIsExistUser: action.payload.data,\r\n                status: action.payload.status}\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userAction;","import {\r\n    RESERVE_ADD,\r\n    RESERVE_INDEX,\r\n    RESERVE_DELETE,\r\n    PRE_RESERVE_DATA,\r\n    RESERVE_DATA\r\n} from '../_actions/types'\r\n\r\nconst initialState = {\r\n    error: null,\r\n    reserve: null,\r\n    dateplan: null,\r\n    payment: null,\r\n}\r\n\r\nconst reserveAction = function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case RESERVE_ADD:\r\n            return { ...state, insertReserveSuccess: action.payload.data,\r\n                            status: action.payload.status }\r\n        \r\n        case RESERVE_INDEX:\r\n            return { ...state, indexReserveData: action.payload.data,\r\n                        status: action.payload.status }\r\n\r\n        case RESERVE_DELETE:\r\n            return {...state, deleteReserveSuccess: action.payload.data,\r\n                status: action.payload.status }\r\n        \r\n        case RESERVE_DATA:\r\n            return {...state, viewReserveData: action.payload.data,\r\n                    status: action.payload.status }\r\n        case PRE_RESERVE_DATA:\r\n            return {...state, viewPreReserveData: action.payload.data,\r\n                    status: action.payload.status }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reserveAction;","import {\r\n    STORE_ADD,\r\n    STORE_INFO,\r\n    STORE_SEARCH,\r\n    STORE_LIMIT_SEARCH,\r\n    STORE_UPDATE\r\n} from '../_actions/types'\r\n\r\nconst initialState = {\r\n    error: null,\r\n    store: null,\r\n}\r\n\r\nconst storeReducer = function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case STORE_ADD:\r\n            return { ...state, insertStoreSuccess: action.payload.data,\r\n                            status: action.payload.status }\r\n        case STORE_INFO:\r\n            return {...state, findStoreInfo: action.payload.data,\r\n                status: action.payload.status}\r\n\r\n        case STORE_SEARCH:\r\n            return {...state, arrayStoreList: action.payload.data,\r\n                status: action.payload.status}\r\n\r\n        case STORE_LIMIT_SEARCH:\r\n            return {...state, homeArrayStoreList: action.payload.data,\r\n                status: action.payload.status}\r\n\r\n        case STORE_UPDATE:\r\n            return {...state, updateStoreSuccess: action.payload.data,\r\n                status: action.payload.status}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default storeReducer;","import {\r\n    REVIEW_INDEX,\r\n    REVIEW_ADD\r\n} from '../_actions/types'\r\n\r\nconst initialState = {\r\n    error: null,\r\n    review: null,\r\n}\r\n\r\nconst reviewAction = function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case REVIEW_INDEX:\r\n            return { ...state, indexReview: action.payload.data,\r\n                            status: action.payload.status }\r\n        case REVIEW_ADD:\r\n            return {...state, reviewAddSuccess: action.payload.data,\r\n                status: action.payload.status}\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reviewAction;","import {combineReducers} from 'redux'\r\nimport user from './user_reducer'\r\nimport reserve from './reserve_reducer'\r\nimport store from './store_reducer'\r\nimport review from './review_reducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user, reserve, store, review\r\n    //comment\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducer from './_reducers/';\r\nimport ReduxThunk from 'redux-thunk'\r\nimport promiseMiddleware from 'redux-promise'\r\n\r\nconst store = createStore(rootReducer,\r\n   composeWithDevTools(applyMiddleware(promiseMiddleware, ReduxThunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}